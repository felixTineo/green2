{"version":3,"file":"static/webpack/static/development/pages/index.js.6c9b412c7540ef7d1005.hot-update.js","sources":["webpack:///./components/main/embajador.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { color, font, greenGradient } from '../../layout/main';\nimport Title from './title';\nimport { TweenMax } from 'gsap';\n\nconst images = [\n  {\n    img: '/static/bakery.jpg',\n    msg: 'influye'\n  },\n  {\n    img: '/static/market.jpg',\n    msg: 'patrocina',\n  },\n  {\n    img: '/static/drug.jpg',\n    msg: 'beneficiate'\n  }\n];\n\nconst Cont = ({ img, msg }) => {\n\n  return(\n    <div className=\"main animated slot\">\n      <h1>{msg}</h1>\n      <style jsx>{`\n        .main{\n          height: 100%;\n          background: url(${img})top center no-repeat;\n          background-size: cover;\n        }\n      `}\n      </style>\n    </div>\n  )\n}\n\nconst Carousel = () => {\n  const [index, setIndex] = useState(0);\n  const current = useRef(null);\n  useEffect(()=> {\n    TweenMax.set('.slot', { x: (i) => i * 50 });\n    TweenMax.staggerTo('.slot', 5, { x: '+=1000', repeat: -1 }, 5)\n  },[])\n  return(\n    <div className=\"main\">\n      <Cont ref={current} {...images[0]}/>\n      <Cont ref={current} {...images[1]}/>\n      <Cont ref={current} {...images[2]}/>\n      <style jsx>{`\n        .main{\n          position: absolute;\n          width: 100%;\n          height: 100%;\n          top: 0;\n          left: -50px;\n        }\n      `}\n      </style>\n    </div>\n  )\n}\n\nconst Main = () => {\n\n  return(\n    <div className=\"main\">\n      <header>\n        <Title word=\"embajadores\" />\n      </header>\n      <div className=\"body\">\n        <Carousel />\n      </div>\n      <style jsx>{`\n        .main{\n          height: 100vh;\n          display: flex;\n          flex-direction: column;\n        }\n        .body{\n          position: relative;\n          flex-grow: 1;\n        }\n      `}\n      </style>\n    </div>\n  )\n}\n\nexport default Main;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAgBA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAqBA;AACA;AACA;;;;A","sourceRoot":""}