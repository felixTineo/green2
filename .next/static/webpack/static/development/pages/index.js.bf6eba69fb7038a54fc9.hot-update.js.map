{"version":3,"file":"static/webpack/static/development/pages/index.js.bf6eba69fb7038a54fc9.hot-update.js","sources":["webpack:///./components/main/layout.jsx"],"sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ON_EVENT } from '../../store/actions';\n//import '../../node_modules/bootstrap/scss/bootstrap.scss';\nimport './base.scss';\nimport Head from 'next/head';\nimport Header from './header';\nimport Menu from './menu';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport { Popover, PopoverBody, Spinner, Modal } from 'reactstrap';\nimport { color, font } from '../../layout/var';\nimport Title from '../main/title';\n\nconst Login = ({ prim, title }) => {\n\n  const [mail, setMail] = useState('');\n  const [pass, setPass] = useState('');\n  const [mailPop, setMailPop] = useState(false);\n  const [passPop, setPassPop] = useState(false);\n  const [disable, setDisable] = useState(false);\n\n  const onSubmit = async(e) => {\n    try{\n      e.preventDefault();\n      setDisable(true);\n      const data = {\n        mail,\n        pass\n      }\n      const res = await axios.post('/user/login', data);\n      if(res.data === 'mail') {\n         setMailPop(true);\n         return setDisable(false);\n      }\n      if(res.data === 'pass'){\n        setPassPop(true)\n        return setDisable(false);\n      };\n      Router.push(`/perfil/${res.data}`);\n    }catch(e){\n      console.log(e);\n    }\n  }\n\n  return(\n    <form onSubmit={onSubmit} method=\"POST\">\n      <header><h1>Iniciar Sesion</h1></header>\n      <div className=\"body\">\n        <label htmlFor=\"mail\">\n          <p>Usuario</p>\n          <input disabled={disable} onFocus={()=> setMailPop(false)} value={mail} onChange={(e)=> setMail(e.currentTarget.value)} type=\"text\" id=\"mail\" name=\"mail\"/>\n          <Popover target=\"mail\" placement=\"right\" isOpen={mailPop}>\n            <PopoverBody>El correo no es valido</PopoverBody>\n          </Popover>\n        </label>\n        <label htmlFor=\"pass\">\n          <p>contraseña</p>\n          <input disabled={disable} onFocus={()=> setPassPop(false)} value={pass} onChange={(e)=> setPass(e.currentTarget.value)} type=\"password\" name=\"pass\" id=\"pass\"/>\n          <Popover target=\"pass\" placement=\"right\" isOpen={passPop}>\n            <PopoverBody>La contraseña no es valida</PopoverBody>\n          </Popover>\n        </label>\n      </div>\n      <footer>\n        {\n          disable ? <Spinner color={ title === 'siembra' ? 'main-green' : title === 'ayuda' ? 'main-red' : 'main-blue' } /> : <button disabled={disable} type=\"submit\">Login</button>\n        }\n      </footer>\n      <style jsx>{`\n        form{\n          display: flex;\n          flex-direction: column;\n          justify-content: space-between;\n          align-items: center;\n          height: 100%;\n        }\n        header{\n          color: ${prim || color.prim};\n          margin-top: .5rem;\n        }\n        .body{\n          width: 100%;\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n        }\n        label:nth-child(1){\n          margin-bottom: 1rem;\n        }\n        label p{\n          margin: 0;\n          color: rgba(0, 0, 0, .2);\n        }\n        input{\n          border: none;\n          border-bottom: 2px solid rgba(0, 0, 0, .2);\n        }\n        input:focus{\n          outline: none;\n          border-color: ${prim || color.prim};\n        }\n        footer{\n          display: flex;\n          width: 100%;\n          justify-content: flex-end;\n          padding: .5rem;\n        }\n        button{\n          background: transparent;\n          border: 2px solid ${prim || color.prim};\n          text-transform: uppercase;\n          transition: 250ms ease;\n          color: ${prim || color.prim};\n        }\n        button:focus{\n          outline: none;\n        }\n        button:hover{\n          background: ${prim || color.prim};\n          color: #fff;\n        }\n      `}\n      </style>\n    </form>\n  )\n}\n\nconst Register = () => {\n  const [value, setValue] = useReducer((state, next) => ({ ...state, ...next }),{\n    name: '',\n    lastName: '',\n    mail: '',\n    pass: '',\n    birthday: '',\n    genre: 'Mujer',\n  })\n  const [disable, setDisable] = useState(false);\n  const [mailPop, setMailPop] = useState(false);\n\n  const onSubmit = async(e) => {\n    try{\n      e.preventDefault();\n      const data = value;\n      const res = await axios.post('/user/register', data);\n      if(res.data === 'mail'){\n        setMailPop(true);\n        return setDisable(false);\n      }\n      Router.push(`/perfil/${res.data}`);\n    }catch(e){\n      console.log(e);\n    }\n  }\n\n  return(\n    <form onSubmit={onSubmit} method=\"POST\">\n      <header><h1>Registro</h1></header>\n      <div className=\"body\">\n        <div className=\"fullName\">\n          <input disabled={disable} value={value.name} onChange = {(e)=> setValue({ name: e.currentTarget.value })} type=\"text\" id=\"name\" placeholder=\"Nombre\"/>\n          <input disabled={disable} value={value.lastName} onChange = {(e)=> setValue({ lastName: e.currentTarget.value })} type=\"text\" id=\"lastName\" placeholder=\"Apellido\"/>\n        </div>\n        <input disabled={disable} value={value.mail} onChange = {(e)=> setValue({ mail: e.currentTarget.value })} onFocus={()=> setMailPop(false)} type=\"text\" id=\"mail\" placeholder=\"Correo electrónico\"/>\n        <Popover placement=\"bottom\" target=\"mail\" isOpen={mailPop}>\n          <PopoverBody>Ya existe una cuenta con este correo</PopoverBody>\n        </Popover>\n        <input disabled={disable} value={value.pass} onChange = {(e)=> setValue({ pass: e.currentTarget.value })} type=\"password\" id=\"pass\" placeholder=\"contraseña\"/>\n        <div className=\"birth_sex\">\n          <label htmlFor=\"birthday\">\n            <p>Cumpleaños</p>\n            <input disabled={disable} value={value.birthday} onChange = {(e)=> setValue({ birthday: e.currentTarget.value })} type=\"date\" name=\"birthday\" id=\"birthday\"/>\n          </label>\n          <label htmlFor=\"genre\">\n            <p>Genero</p>\n            <select disabled={disable} value={value.genre} onChange = {(e)=> setValue({ genre: e.currentTarget.value })} name=\"genre\" id=\"genre\">\n              <option value=\"mujer\">Mujer</option>\n              <option value=\"hombre\">Hombre</option>\n              <option value=\"otro\">Otro</option>\n            </select>\n          </label>\n        </div>\n      </div>\n      <footer>\n        <button type=\"button\" onClick={()=> Object.keys(value).forEach(val => setValue({ [val]: '' }))}>cancelar</button>\n        <button type=\"submit\">Enviar</button>\n      </footer>\n      <style jsx>{`\n        form{\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          width: 100%;\n          height: 100%;\n        }\n        header{\n          color: ${color.prim};\n        }\n        .body{\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          width: 100%;\n          height: 100%;\n          padding: .5rem;\n        }\n        input{\n          font-size: 12px;\n          width: 100%;\n          margin-bottom: 1rem;\n          padding-left: .5rem;\n        }\n        input[type=\"date\"]{\n          border: 1px solid rgba(0, 0, 0, .2);\n        }\n        .fullName{\n          display: flex;\n          width: 100%;\n          justify-content: center;\n          align-items: center;\n        }\n        .fullName input{\n        }\n        .fullName input:nth-child(2){\n          margin-left: .5rem;\n        }\n        .birth_sex{\n          display: flex;\n          justify-content: space-around;\n          width: 100%;\n        }\n        footer{\n          display: flex;\n          justify-content: flex-end;\n          align-items: center;\n          width: 100%;\n          padding: .5rem;\n        }\n        button{\n          background: transparent;\n          color: ${color.prim};\n          border: 2px solid ${color.prim};\n          transition: 250ms ease;\n          margin-left: .5rem;\n        }\n        button:focus{\n          outline: none;\n        }\n        button:hover{\n          color: #fff;\n          background: ${color.prim};\n        }\n      `}\n      </style>\n    </form>\n  )\n}\n\nconst LogReg = ({ children }) => {\n\n  return(\n    <div className=\"main_cont\">\n      <div className=\"main\">\n        <div className=\"publish\">\n        </div>\n        <div className=\"cont\">\n          {children}\n        </div>\n      </div>\n      <style jsx>{`\n        .main_cont{\n          height: 100vh;\n          width: 70%;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          position: relative;\n        }\n        .main{\n          height: 50%;\n          width: 80%;\n          background: #fff;\n          animation: down 600ms ease-in-out;\n          animation-fill-mode: forwards;\n          display: flex;\n        }\n        .publish{\n          width: 50%;\n          height: 100%;\n          background: url('/static/random/r16.jpg')top center no-repeat;\n          background-size: cover;\n        }\n        .cont{\n          width: 50%;\n        }\n        @keyframes down{\n          0%{\n            opacity: 0;\n            transform: translateY(-100%);\n          }\n          50%{\n            transform: translateY(50px);\n          }\n          100%{\n            opacity: 1;\n            transform: translateY(0px);\n          }\n        }\n      `}\n      </style>\n    </div>\n  )\n}\n\nconst MyModal = () => {\n  const menu = useSelector(state => state.main.nav.visible);\n  const main = useSelector(state => state.main.nav);\n  const { login, register } = main;\n  return(\n    <div className=\"modal\">\n      {\n        login && <LogReg><Login /></LogReg>\n      }\n      {\n        register && <LogReg><Register /></LogReg>\n      }\n      <style jsx>{`\n        .modal{\n          display: ${menu ? 'block' : 'none'};\n          position: fixed;\n          top: 0;\n          left: 0;\n          height: 100%;\n          width: 100%;\n          background: rgba(0, 0, 0, .5);\n          z-index: 150;\n          content: \" \";\n          transition: 250ms ease;\n        }\n      `}\n      </style>\n    </div>\n  )\n}\n\nconst EventHome = ({ current, setDonate }) => {\n\n  return(\n    <>\n      <header>\n        <div>\n          <h1>{current.title}</h1>\n          <p className=\"subTitle\">{current.subTitle}</p>\n        </div>\n      </header>\n      <div className=\"body\">\n        <p>{current.description}</p>\n      </div>\n      <footer>\n        <button>Participar</button>\n        <button onClick={()=> setDonate(true)}>Donar</button>\n      </footer>\n      <style jsx>{`\n        header{\n          display: flex;\n          justify-content: space-between;\n          align-items: flex-start;\n        }\n        header div{\n          display: flex;\n          flex-direction: column;\n          justify-content: flex-start;\n          align-items: flex-start;\n          margin: 5rem 0 1rem;\n        }\n        h1, p{\n          max-width: 100%;\n        }\n        header h1, .subTitle{\n          margin:0;\n          color: ${current.prim};\n          text-transform: uppercase;\n        }\n        button{\n          background: transparent;\n          border: 2px solid ${current.prim};\n          color: ${current.prim};\n          transition: 250ms ease;\n        }\n        button:focus{\n          outline: none;\n        }\n        button:hover{\n          background: ${current.prim};\n          color: #fff;\n        }\n        .body{\n          flex-grow: 1;\n        }\n        footer{\n          display: flex;\n          justify-content: flex-end;\n          align-items: center;\n        }\n        footer button{\n          margin-left: 1rem;\n        }\n      `}\n      </style>\n    </>\n  )\n}\n\nconst Donate = ({ current }) => {\n  const [login, setLogin] = useState(false);\n  const [donate, setDonate] = useState(false);\n  const [welcome, setWelcome] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [mount, setMount] = useState(0);\n  const [user, setUser] = useState({ fullName: 'star green', perfilImg: '/static/random/r5.jpg' });\n  const onTest = async()=> {\n    try{\n      const res = await axios.get('/user/testLogin');\n      if(res.data){\n        setLoader(false);\n        setUser(res.data);\n        setDonate(true);\n      }\n    }catch(e){\n      console.log(e);\n      setLoader(false);\n      setLogin(true);\n    }\n  }\n    useEffect(()=> {\n      onTest();\n    },[])\n\n    const onDonate = async(e) => {\n      try{\n        e.preventDefault();\n        setDonate(false);\n        setLoader(true);\n        setTimeout(()=>{\n          setLoader(false);\n          setWelcome(true);\n        },2000);\n      }catch(e){\n        console.log(e);\n      }\n    }\n  const { perfilImg, fullName, wallet } = user;\n  return(\n    <div className=\"main\">\n      {\n        loader && <div className=\"loader\"><Spinner color={ current.title === 'siembra' ? 'main-green' : current.title === 'ayuda' ? 'main-red' : 'main-blue' } /></div>\n      }\n      {\n        login && <div className=\"login\"><Login prim={ current.prim } title={current.title} /></div>\n      }\n      {\n        donate && (\n          <div className=\"main_donate animated fadeIn\">\n            <header>\n              <div className=\"user animated fadeIn delay-1s\">\n                <img src={perfilImg} alt=\"\"/>\n                <p>{fullName}</p>\n              </div>\n              <div className=\"found animated flipInX delay-2s\">\n                <img src=\"/static/greencoin.svg\" alt=\"\"/>\n                <p>{wallet}</p>\n              </div>\n            </header>\n            <div className=\"animated fadeIn delay-2s\">\n              <h1>Donar</h1>\n              <p>Ingresa un monto en greencoins, los mismos seran descontados de su cuenta y seran recibidos por las oganizaciones que apoyan esta causa.</p>\n              <form method=\"POST\" onSubmit={onDonate}>\n                <input value={mount} onChange={(e)=> setMount(e.currentTarget.value)} type=\"number\"/>\n                <button type=\"submit\">donar</button>\n              </form>\n            </div>\n          </div>\n        )\n      }\n      {\n        welcome && (\n          <div className=\"welcome animated fadeIn\">\n            <h1>Felicidades, ya eres embajador de este evento</h1>\n            <p>Podras seguir lo que hacemos con tu colaboracion en el siguiente <a href=\"#\">Enlace.</a></p>\n            <p>De igual manera las actualizaciones del evento seran publicadas en tu muro.</p>\n          </div>\n        )\n      }\n      <style jsx>{`\n        .main{\n          height: 100%;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n        }\n        header{\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          margin-bottom: 2rem;\n        }\n        header p{\n          margin: 0;\n        }\n        .loader{\n          height: 100%;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n        }\n        .login{\n          height: 60%;\n        }\n        .main_donate h1{\n          color: ${current.prim};\n        }\n        .user img{\n          width: 80px;\n          height: 80px;\n          object-fit: cover;\n          object-position: center;\n          border-radius: 50%;\n        }\n        .found{\n          display: flex;\n          align-items: center;\n        }\n        .found img{\n          width: 30px;\n          height: 30px;\n          object-fit: cover;\n          object-position; center;\n        }\n        input{\n          width: 60px;\n        }\n        .welcome h1, a{\n          color: ${current.prim};\n        }\n        .welcome a{\n          font-wight: 550;\n        }\n        .welcome p{\n          margin: 0;\n        }\n      `}\n      </style>\n    </div>\n  )\n}\n\nconst Events = () => {\n  const events = useSelector(state => state.events);\n  const dispatch = useDispatch();\n  const { visible, current } = events;\n  const [donate, setDonate] = useState(false);\n  useEffect(()=> setDonate(true),[visible]);\n  return(\n    <Modal isOpen={visible} style={{ minWidth: '95vw' }}>\n      <div className=\"main\">\n        <button title=\"Cerrar\" onClick={()=> dispatch({ type: ON_EVENT, eventType: null })}>X</button>\n        <div className=\"img\">\n          <img src={current.img} alt=\"\"/>\n        </div>\n        <div className=\"info\">\n          {\n            donate ? <Donate current={current} /> : <EventHome current={current} setDonate={setDonate} />\n          }\n        </div>\n        <style jsx>{`\n          .main{\n            //height: 80vh;\n            //height: 100vh;\n            display: flex;\n            flex-direction: column;\n            position: relative;\n          }\n          .img, .info{\n            //width: 50%;\n            //height: 100%;\n            height: 50%;\n          }\n          img{\n            width: 100%;\n            height: 100%;\n            object-fit: cover;\n            object-position: ${current.prim === \"#03a7f0\" ? 'top' : 'bottom' };\n          }\n          .info{\n            padding: .5rem .5rem .5rem 1rem;\n            height: 100%;\n            display: flex;\n            flex-direction: column;\n          }\n          button{\n            background: transparent;\n            border: 2px solid ${current.prim};\n            color: ${current.prim};\n            transition: 250ms ease;\n            position: absolute;\n            top: .5rem;\n            right: .5rem;\n          }\n          button:focus{\n            outline: none;\n          }\n          button:hover{\n            background: ${current.prim};\n            color: #fff;\n          }\n        `}\n        </style>\n      </div>\n    </Modal>\n  )\n}\n\nconst Layout = ({ children }) => {\n  return(\n    <div>\n      <Head>\n        <link rel=\"stylesheet\" href=\"/static/animate.min.css\"/>\n        <link rel=\"stylesheet\" href=\"/static/aos.css\"/>\n        <link href=\"https://fonts.googleapis.com/css?family=Archivo+Black|Open+Sans|Pacifico&display=swap\" rel=\"stylesheet\"/>\n      </Head>\n      <main>\n        <Header />\n        {children}\n        <Events />\n      </main>\n      <Menu />\n      <MyModal />\n      <style jsx>{`\n        div{\n          display: flex;\n          width: 100%;\n          position: relative;\n        }\n        main{\n          width: 100%;\n          position: relative;\n          flex: 1 1 0;\n          overflow: hidden;\n        }\n      `}\n      </style>\n    </div>\n  )\n}\n\nexport default Layout;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAJA;AAAA;AACA;AADA;AAQA;AACA;AATA;AAAA;AAAA;AAAA;AACA;AASA;AAVA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAaA;AAdA;AACA;AADA;AAgBA;AACA;AAjBA;AAAA;AACA;AADA;AAAA;AAAA;AAmBA;AACA;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAsBA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAKA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AApBA;AAAA;AAAA;AAiFA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAAA;AACA;AADA;AAIA;AACA;AALA;AAAA;AAAA;AAAA;AACA;AAKA;AANA;AACA;AADA;AASA;AATA;AAAA;AACA;AADA;AAAA;AAAA;AAWA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAcoGA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAJA;AAAA;AAmDA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAwaA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AA1BA;AAAA;AAAA;AAuCA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AApCA;AAAA;AAAA;AAqGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAwDA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AANA;AAAA;AA6BA;AACA;AACA;;;;A","sourceRoot":""}