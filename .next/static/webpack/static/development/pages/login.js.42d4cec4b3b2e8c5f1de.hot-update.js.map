{"version":3,"file":"static/webpack/static/development/pages/login.js.42d4cec4b3b2e8c5f1de.hot-update.js","sources":["webpack:///./pages/login.jsx"],"sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\nimport './login.scss';\nimport Layout from '../components/layout/layout';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGift } from '@fortawesome/free-solid-svg-icons';\nimport Logo from '../components/layout/logo';\nimport { TweenMax } from 'gsap';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { ON_LOADER } from '../store/actions';\nimport { Popover, PopoverBody } from 'reactstrap';\nimport Router from 'next/router';\n\nconst LoginForm = ({ setLogin }) => {\n  const [mail, setMail] = useState('');\n  const [pass, setPass] = useState('');\n  const [popMail, setPopMail] = useState(false);\n  const [popPass, setPopPass] = useState(false);\n  const dispatch = useDispatch();\n  const onSubmit = async (e) => {\n    try{\n      e.preventDefault();\n      let count = 0;\n      const interval = setInterval(()=> {\n        count = count + 25;\n        dispatch({ type: ON_LOADER, loader: count });\n      }, 1000);\n      const data = { mail, pass };\n      const res = await axios.post('/user/login', data);\n      clearInterval(interval);\n      if(res.data === 'mail'){\n        dispatch({ type: ON_LOADER, loader: 0 });\n        return setPopMail(true);\n      }\n      if(res.data === 'pass'){\n        dispatch({ type: ON_LOADER, loader: 0 });\n        return setPopPass(true);\n      }\n      dispatch({ type: ON_LOADER, loader: 100 });\n      Router.push({ pathname: '/perfil', query: res.data }, `/user/perfil/${res.data._id}`);\n    }catch(err){\n      console.log(err);\n    }\n  }\n\n\nreturn(\n  <div className=\"login_register_cont animated fadeIn\">\n    <header>\n        <h1>Inicio de sessión</h1>\n    </header>\n    <form onSubmit={onSubmit}>\n      <label htmlFor=\"mail\">\n        <p>usuario</p>\n        <input autoComplete=\"false\" onBlur={()=> setPopMail(false)} onFocus={()=> setPopMail(false)} id=\"mail\" value={mail} onChange={(e)=> setMail(e.currentTarget.value)} type=\"text\"/>\n        <Popover isOpen={popMail} target=\"mail\" placement=\"bottom\">                                                                                                                                                                                                                                                                                                                                                 \n          <PopoverBody>\n            <span>El correo no es correcto, por favor verifiquelo e intentelo de nuevo</span>\n          </PopoverBody>\n        </Popover>\n      </label>\n      <label htmlFor=\"pass\">\n        <p>contraseña</p>\n        <input onBlur={()=> setPopPass(false)} onFocus={()=> setPopPass(false)} id=\"pass\" value={pass} onChange={(e)=> setPass(e.currentTarget.value)} type=\"password\"/>\n        <Popover isOpen={popPass} target=\"pass\" placement=\"bottom\">\n          <PopoverBody>\n            <span>El correo no es correcto, por favor verifiquelo e intentelo de nuevo</span>\n          </PopoverBody>\n        </Popover>\n      </label>\n      <footer className=\"login_register_cont\">\n        <button onClick={()=>setLogin(false)} className=\"btn_loogin_register btn_inactive\" type=\"button\">registro</button>\n        <button className=\"btn_loogin_register btn_active\" type=\"submit\">login</button>\n      </footer>\n    </form>\n  </div>\n)\n}\n\nconst RegisterForm = ({ setLogin }) => {\n  const [values, setValues] = useReducer((state, newState) => ({...state, ...newState}),{\n    name: '',\n    lastName: '',\n    mail: '',\n    pass: '',\n    birthday: '',\n    sex: '',\n  })\n\n  return(\n    <div className=\"register_login_cont animated fadeIn\">\n      <header>\n        <h1>registro</h1>\n        <p>Gratis, facil y rapido</p>\n      </header>\n      <form action=\"\">\n        <div className=\"fullName\">\n          <input\n            id=\"name\"\n            type=\"text\"\n            placeholder=\"Nombre\"\n            value={values.name}\n            onChange={(e)=> setValues({ name: e.currentTarget.value })}\n          />\n          <input\n            style={{ marginLeft:\".5rem\" }}\n            id=\"lastName\"\n            type=\"text\"\n            placeholder=\"Apellido\"\n            value={values.lastName}\n            onChange={(e)=> setValues({ lastName: e.currentTarget.value })}\n          />\n        </div>\n        <input\n          id=\"mail\"\n          type=\"text\"\n          placeholder=\"Correo electrónico\"\n          value={values.mail}\n          onChange={(e)=> setValues({ mail: e.currentTarget.value })}\n        />\n        <input\n          id=\"pass\"\n          type=\"password\"\n          placeholder=\"Contraseña\"\n          value={values.pass}\n          onChange={(e)=> setValues({ pass: e.currentTarget.value })}\n        />\n        <div className=\"birth_sex_main\">\n          <div className=\"birthday_sex\">\n            <p>Cumpleaños</p>\n            <input\n              id=\"birthday\"\n              type=\"date\"\n              placeholder=\"Correo electrónico\"\n              value={values.birthday}\n              onChange={(e)=> setValues({ birthday: e.currentTarget.value })}\n            />\n          </div>\n          <div className=\"birthday_sex\" style={{ marginLeft: '1rem' }}>\n            <p>Sexo</p>\n            <select onChange={(e)=> setValues({ sex: e.currentTarget.value })} name=\"sex\" id=\"sex\">\n              <option value=\"female\">Mujer</option>\n              <option value=\"male\">Hombre</option>\n              <option value=\"otro\">Otro</option>\n            </select>\n          </div>\n        </div>\n        <footer className=\"login_register_cont\">\n          <button className=\"btn_loogin_register btn_active\" type=\"submit\">registro</button>\n          <button onClick={()=> setLogin(true)} className=\"btn_loogin_register btn_inactive\" type=\"button\">login</button>\n        </footer>\n      </form>\n    </div>\n  )\n}\n\n\nconst Login = () => {\n  const [login, setLogin] = useState(true);\n  return(\n    <Layout>\n      <div className=\"login_main_cont\">\n        <div className=\"login_cont shadow\">\n          <div className=\"green_cont\">\n            <header><Logo url='/'/></header>\n            <div className=\"green_logo\">\n              <h1><FontAwesomeIcon icon={faGift} /></h1>\n              <p>Comparte, disfruta... Ayuda el planeta</p>\n              <button type=\"button\">¿quieres saber mas?</button>\n            </div>\n            <small>Comparte con los seres que amas y ayuda a el planeta.</small>\n          </div>\n          {\n            login && <LoginForm setLogin={setLogin} />\n          }\n          {\n            !login && <RegisterForm setLogin={setLogin} />\n          }\n        </div>\n      </div>      \n    </Layout>\n  )\n};\n\nexport default Login;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AARA;AAAA;AACA;AADA;AASA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AACA;AAWA;AAAA;AAAA;AAAA;AAZA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAeA;AAAA;AAAA;AAAA;AAhBA;AACA;AADA;AAmBA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AApBA;AAAA;AACA;AADA;AAAA;AAAA;AAsBA;AACA;AAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AA0BA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAMA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAAA;AACA;AASA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AANA;AAUA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAKA;AAAA;AAGA;AAAA;AAMA;AACA;AACA;;;;A","sourceRoot":""}