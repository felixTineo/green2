{"version":3,"file":"static/webpack/static/development/pages/_app.js.0b0c3dabb3da5949a74a.hot-update.js","sources":["webpack:///./store/reducers.js"],"sourcesContent":["import { combineReducers } from 'redux';\nimport {\n  ON_DOWN, ON_VIEW_NAV,\n  navView,\n  ON_NOTE,\n  ON_NOTIFICATIONS,\n  ON_LOADER,\n  ON_LOGIN,\n  ON_USER,\n  ON_GIFT,\n  ON_GREENINFO,\n  ON_GREEN_CREATOR,\n  ON_GREEN_LIKE,\n  OFF_GREEN_LIKE,\n  ON_GREEN_WISH_FOUND,\n  ON_GREEN_COMMENT,\n  ON_STORE,\n  storeSections,\n  ON_PRODUCTS,\n  ON_POST_REGISTER,\n  ON_WALLET,\n  ON_UPDATE,\n  ON_GREENPOST,\n  ON_FLOAT,\n  OFF_FLOAT,\n  ON_VAULT,\n  ON_VAULT_HOME,\n  ON_VAULT_PRODUCT,\n  ON_SPACE_HOME,\n  ON_SPACE_WALL,\n  ON_SPACE_CHAT,\n  ON_SPACE_FRIENDS,\n  ON_SPACE_EVENTS,\n  spaceSections,\n  ON_WALL_TOP,\n  ON_WALL_POSTS,\n} from './actions';\n\nexport const initialState = {\n  nav:{\n    loader:0,\n    login: false,\n    down: false,\n    wallet: 0,\n    notifications: {\n      id: '',\n      wallet: 0,\n      notes: {\n        view: false,\n        items: [],\n      },\n      gifts: {\n        view: false,\n        items: [],\n      },\n      friendReq:{\n        view: false,\n        items: [],\n      },\n    },\n  },\n  user:{\n    id: '',\n    owner: false,\n    mail: '',\n    pass: '',\n    name: '',\n    lastName: '',\n    birthday: '',\n    greenPost: [{\n      _id:'',\n    }],\n    perfilImg: '',\n    originCity: '',\n    actualCity: '',\n    primaryShool: '',\n    secondarySchoool: '',\n    university: '',\n    job: '',\n    posts: [{\n      green:true,\n      img: '',\n      date: '',\n      author: '',\n      _id: '',\n      history: '',\n      comments: [],\n      likes: [],\n      wish:{\n        id: '123456789',\n        name: 'Oreo',\n        img: '/static/store/products/gol-1.jpg',\n        tag: 'gol', price: 100,\n        description:'Lorem ipsum dolor sit amet consectetur adipisicing elit. Necessitatibus, cumque atque, dolore qui, tempora delectus provident saepe dicta minus iusto iste autem? Aut, ipsum. Ipsam illo perspiciatis optio architecto cumque!'\n      }\n    }],\n    interest: [],\n    events: [],\n    friends: [],\n  },\n  greenpost:{\n    _id: '',\n    info: false,\n    creator: false,\n    current:{\n      likes:[],\n      comments: [],\n      wish: {},\n    },\n  },\n  store:{\n    visible: false,\n    current: {},\n    home: false,\n    product: false,\n    music: false,\n    ebook: false,\n    toy: false,\n    tv: false,\n    jewel: false,\n    candy: false,\n    items: [],\n  },\n  vault:{\n    visible: false,\n    home: true,\n    product: false,\n    current: {},\n    items: [],\n  },\n  postregister: false,\n  floatingnotes:[],\n  space:{\n    home: true,\n    wall: false,\n    chat: false,\n    friends: false,\n    envents: false,\n  },\n  wall:{\n    top:[],\n    posts:[],\n  }\n};\n\nconst nav = (state= initialState.nav, action) => {\n  switch(action.type){\n    case ON_DOWN:\n      return Object.assign({}, state, { down: action.option });\n    case ON_NOTIFICATIONS:\n      return Object.assign({}, state, { notifications: action.notifications });\n    case ON_LOADER:\n      return Object.assign({}, state, { loader: action.loader });\n    case ON_LOGIN:\n      return Object.assign({}, state, { login: action.option });\n    case ON_WALLET:\n      return Object.assign({}, state, {\n        notifications: Object.assign({}, state.notifications, { wallet: state.notifications.wallet + action.coin })\n      });\n    case ON_VIEW_NAV:\n      if(action.note === navView.GIFT){\n        return Object.assign({}, state, {\n          notifications: Object.assign({}, state.notifications, {\n            gifts: Object.assign({}, state.notifications.gifts, { view: true }),\n          })\n        });\n      }\n      if(action.note === navView.NOTES){\n        return Object.assign({}, state, {\n          notifications: Object.assign({}, state.notifications, {\n            notes: Object.assign({}, state.notifications.notes, { view: true }),\n          })\n        });\n      }\n      if(action.note === navView.FRIEND){\n        return Object.assign({}, state, {\n          notifications: Object.assign({}, state.notifications, {\n            friendReq: Object.assign({}, state.notifications.friendReq, { view: true }),\n          })\n        });\n      }\n    case ON_NOTE:\n      const { gifts, notes, friendReq } = state.notifications;\n\n      if(action.payload.note === navView.GIFT){\n        return Object.assign({}, state, {\n          notifications: Object.assign({}, state.notifications, {\n            gifts: Object.assign({}, state.notifications.gifts, {\n              view: false,\n              items: [action.payload.user, ...gifts.items],\n            })\n          })\n        })\n      }\n      if(action.payload.note === navView.NOTES){\n        return Object.assign({}, state, {\n          notifications: Object.assign({}, state.notifications, {\n            notes: Object.assign({}, state.notifications.notes, {\n              view: false,\n              items: [action.payload.user, ...notes.items],\n            })\n          })\n        })\n      }\n      if(action.payload.note === navView.FRIEND){\n        return Object.assign({}, state, {\n          notifications: Object.assign({}, state.notifications, {\n            friendReq: Object.assign({}, state.notifications.friendReq, {\n              view: false,\n              items: [action.payload.user, ...friendReq.items],\n            })\n          })\n        })\n      }\n    default:\n      return state;\n  }\n};\n\nconst user = (state= initialState.user, action) => {\n  switch(action.type){\n    case ON_USER:\n      return Object.assign({}, state, action.user);\n    case ON_UPDATE:\n      return Object.assign({}, state, { ...action.payload });\n    default:\n      return state;\n  }\n};\n\nconst greenpost = (state = initialState.greenpost, action) => {\n  switch (action.type) {\n    case ON_GREENINFO:\n      return Object.assign({}, state, { info: action.option });\n    case ON_GREEN_CREATOR:\n      return Object.assign({}, state, { creator: !state.creator });\n    case ON_GREENPOST:\n      return Object.assign({}, state, { current: action.greenpost });\n    case ON_GREEN_LIKE:\n      return Object.assign({}, state, {\n        current: Object.assign({}, state.current, { likes: [action.like, ...state.current.likes] })\n      });\n    case OFF_GREEN_LIKE:\n      const nextState = state.current.likes.filter(like => like._id !== action.uid);\n      return Object.assign({}, state, {\n        current: Object.assign({}, state.current, { likes: nextState })\n      });\n    case ON_GREEN_WISH_FOUND:\n      return Object.assign({}, state, {\n        current: Object.assign({}, state.current, {\n          wish: Object.assign({}, state.current.wish, {\n            found: state.current.wish.found + action.found\n          })\n        })\n      });\n    case ON_GREEN_COMMENT:\n      return Object.assign({}, state, {\n        current: Object.assign({}, state.current, { comments: [...state.current.comments, action.comment] })\n      })\n    default:\n      return state;\n  }\n};\n\nconst greenstore = (state = initialState.store, action) => {\n  const { HOME, PRODUCT, MUSIC, TV, EBOOK, CANDY, TOY, JEWEL } = storeSections;\n  switch(action.type){\n    case ON_STORE:\n      return Object.assign({}, state, { visible: !state.visible, home: true });\n    case ON_PRODUCTS:\n      return Object.assign({}, state, { items: action.products });\n    case PRODUCT:\n      return Object.assign({}, state, {\n        current: action.product,\n        product: true,\n        home: false,\n        jewel: false,\n        ebook: false,\n        music: false,\n        toy: false,\n        tv: false,\n        candy: false,\n      });\n    case HOME:\n      return Object.assign({}, state, {\n        product: false,\n        home: true,\n        jewel: false,\n        ebook: false,\n        music: false,\n        toy: false,\n        tv: false,\n        candy: false,\n      });\n    case MUSIC:\n      return Object.assign({}, state, {\n        product: false,\n        home: false,\n        jewel: false,\n        ebook: false,\n        music: true,\n        toy: false,\n        tv: false,\n        candy: false,\n      });\n    case TV:\n      return Object.assign({}, state, {\n        product: false,\n        home: false,\n        jewel: false,\n        ebook: false,\n        music: false,\n        toy: false,\n        tv: true,\n        candy: false,\n      });\n    case JEWEL:\n      return Object.assign({}, state, {\n        product: false,\n        home: false,\n        jewel: true,\n        ebook: false,\n        music: false,\n        toy: false,\n        tv: false,\n        candy: false,\n      });\n    case TOY:\n      return Object.assign({}, state, {\n        product: false,\n        home: false,\n        jewel: false,\n        ebook: false,\n        music: false,\n        toy: true,\n        tv: false,\n        candy: false,\n      });\n    case CANDY:\n      return Object.assign({}, state, {\n        product: false,\n        home: false,\n        jewel: false,\n        ebook: false,\n        music: false,\n        toy: false,\n        tv: false,\n        candy: true,\n      });\n    case EBOOK:\n      return Object.assign({}, state, {\n        product: false,\n        home: false,\n        jewel: false,\n        ebook: true,\n        music: false,\n        toy: false,\n        tv: false,\n        candy: false,\n      });\n    default:\n      return state\n  }\n};\n\nconst postregister = (state = initialState.postregister, action) => {\n  if(action.type === ON_POST_REGISTER){\n    return !state;\n  }\n  return state;\n};\n\nconst floatingnotes = (state = initialState.floatingnotes, action) => {\n  if(action.type === ON_FLOAT){\n    return [...state, action.payload];\n  }\n  if(action.type === OFF_FLOAT){\n    const nextState = state.filter(note => note.id !== action.id);\n    return nextState;\n  }\n  return state;\n};\n\nconst vault = (state = initialState.vault, action) => {\n  switch (action.type) {\n    case ON_VAULT:\n      return Object.assign({}, state, { visible: !state.visible });\n    case ON_VAULT_HOME:\n      return Object.assign({}, state, { home: true, product: false });\n    case ON_VAULT_PRODUCT:\n      return Object.assign({}, state, { home: false, product: true, current: action.product })\n    default:\n      return state;\n  }\n};\n\nconst space = (state = initialState.space, action) => {\n  switch (action.type) {\n    case ON_SPACE_HOME:\n      return Object.assign({}, state, { home: true, wall: false, chat: false, friends: false, events: false });\n    case ON_SPACE_WALL:\n      return Object.assign({}, state, { home: false, wall: true, chat: false, friends: false, events: false });\n    case ON_SPACE_CHAT:\n      return Object.assign({}, state, { home: false, wall: false, chat: true, friends: false, events: false });\n    case ON_SPACE_FRIENDS:\n      return Object.assign({}, state, { home: false, wall: false, chat: false, friends: true, events: false });\n    case ON_SPACE_EVENTS:\n      return Object.assign({}, state, { home: false, wall: false, chat: false, friends: false, events: true });\n    default:\n      return state;\n  }\n};\nconst wall = (state = initialState.wall, action) => {\n  switch (action.type) {\n    case ON_WALL_TOP:\n      return Object.assign({}, state, { top: action.posts });\n    case ON_WALL_POSTS:\n      return Object.assign({}, state, { posts: action.posts });\n    default:\n      return state;\n  }\n}\n\nexport const store = combineReducers({\n  nav,\n  user,\n  greenpost,\n  greenstore,\n  postregister,\n  floatingnotes,\n  vault,\n  space,\n  wall,\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAXA;AALA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AALA;AATA;AAiBA;AACA;AACA;AArCA;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AArGA;AACA;AA0GA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AADA;AAKA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AADA;AADA;AAKA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AADA;AADA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AADA;AAQA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AADA;AAQA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AADA;AAQA;AACA;AAAA;AACA;AArEA;AAuEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AANA;AAQA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AADA;AADA;AACA;AAMA;AACA;AACA;AAAA;AAAA;AADA;AACA;AAEA;AACA;AA7BA;AA+BA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AASA;AACA;AA/FA;AAicA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;;;;A","sourceRoot":""}