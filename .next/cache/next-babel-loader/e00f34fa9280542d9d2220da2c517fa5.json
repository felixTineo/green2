{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { combineReducers } from 'redux';\nimport { ON_DOWN, ON_VIEW_NAV, navView, ON_NOTE, ON_NOTIFICATIONS, ON_LOADER, ON_LOGIN, ON_USER, ON_GREENINFO, ON_GREEN_CREATOR, ON_STORE, storeSections, ON_PRODUCTS, ON_POST_REGISTER } from './actions';\nexport const initialState = {\n  nav: {\n    loader: 0,\n    login: false,\n    down: false,\n    wallet: 0,\n    notifications: {\n      id: '',\n      notes: {\n        view: false,\n        items: []\n      },\n      gifts: {\n        view: false,\n        items: []\n      },\n      friendReq: {\n        view: false,\n        items: []\n      }\n    }\n  },\n  user: {\n    id: '',\n    owner: false,\n    mail: '',\n    pass: '',\n    name: '',\n    lastName: '',\n    birthday: '',\n    greenPost: {\n      likes: [],\n      comments: [],\n      wish: {}\n    },\n    perfilImg: '',\n    originCity: '',\n    actualCity: '',\n    primaryShool: '',\n    secondarySchoool: '',\n    university: '',\n    job: '',\n    posts: [{\n      green: true,\n      img: '',\n      date: '',\n      author: '',\n      _id: '',\n      history: '',\n      comments: [],\n      likes: [],\n      wish: {\n        id: '123456789',\n        name: 'Oreo',\n        img: '/static/store/products/gol-1.jpg',\n        tag: 'gol',\n        price: 100,\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Necessitatibus, cumque atque, dolore qui, tempora delectus provident saepe dicta minus iusto iste autem? Aut, ipsum. Ipsam illo perspiciatis optio architecto cumque!'\n      }\n    }],\n    interest: [],\n    events: [],\n    friends: []\n  },\n  greenpost: {\n    info: false,\n    creator: false\n  },\n  store: {\n    visible: false,\n    current: {},\n    home: false,\n    product: false,\n    music: true,\n    ebook: false,\n    toy: false,\n    tv: false,\n    jewel: false,\n    candy: false,\n    items: []\n  },\n  postregister: false\n};\n\nconst nav = (state = initialState.nav, action) => {\n  switch (action.type) {\n    case ON_DOWN:\n      return _Object$assign({}, state, {\n        down: action.option\n      });\n\n    case ON_NOTIFICATIONS:\n      return _Object$assign({}, state, {\n        notifications: action.notifications\n      });\n\n    case ON_LOADER:\n      return _Object$assign({}, state, {\n        loader: action.loader\n      });\n\n    case ON_LOGIN:\n      return _Object$assign({}, state, {\n        login: action.option\n      });\n\n    case ON_VIEW_NAV:\n      if (action.note === navView.GIFT) {\n        return _Object$assign({}, state, {\n          notifications: _Object$assign({}, state.notifications, {\n            gifts: _Object$assign({}, state.notifications.gifts, {\n              view: true\n            })\n          })\n        });\n      }\n\n      if (action.note === navView.NOTES) {\n        return _Object$assign({}, state, {\n          notifications: _Object$assign({}, state.notifications, {\n            notes: _Object$assign({}, state.notifications.notes, {\n              view: true\n            })\n          })\n        });\n      }\n\n      if (action.note === navView.FRIEND) {\n        return _Object$assign({}, state, {\n          notifications: _Object$assign({}, state.notifications, {\n            friendReq: _Object$assign({}, state.notifications.friendReq, {\n              view: true\n            })\n          })\n        });\n      }\n\n    case ON_NOTE:\n      if (action.payload.note === navView.GIFT) {\n        return _Object$assign({}, state, {\n          notifications: _Object$assign({}, state.notifications, {\n            gifts: _Object$assign({}, state.notifications.gifts, {\n              view: false,\n              items: action.payload.items\n            })\n          })\n        });\n      }\n\n      if (action.payload.note === navView.NOTES) {\n        return _Object$assign({}, state, {\n          notifications: _Object$assign({}, state.notifications, {\n            notes: _Object$assign({}, state.notifications.notes, {\n              view: false,\n              items: action.payload.items\n            })\n          })\n        });\n      }\n\n      if (action.payload.note === navView.FRIEND) {\n        return _Object$assign({}, state, {\n          notifications: _Object$assign({}, state.notifications, {\n            friendReq: _Object$assign({}, state.notifications.friendReq, {\n              view: false,\n              items: action.payload.items\n            })\n          })\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst user = (state = initialState.user, action) => {\n  switch (action.type) {\n    case ON_USER:\n      return _Object$assign({}, state, action.user);\n\n    default:\n      return state;\n  }\n};\n\nconst greenpost = (state = initialState.greenpost, action) => {\n  switch (action.type) {\n    case ON_GREENINFO:\n      return _Object$assign({}, state, {\n        info: !state.info\n      });\n\n    case ON_GREEN_CREATOR:\n      return _Object$assign({}, state, {\n        creator: !state.creator\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst greenstore = (state = initialState.store, action) => {\n  const {\n    HOME,\n    PRODUCT,\n    MUSIC,\n    TV,\n    EBOOK,\n    CANDY,\n    TOY,\n    JEWEL\n  } = storeSections;\n\n  switch (action.type) {\n    case ON_STORE:\n      return _Object$assign({}, state, {\n        visible: !state.visible,\n        home: true\n      });\n\n    case ON_PRODUCTS:\n      return _Object$assign({}, state, {\n        items: action.products\n      });\n\n    case PRODUCT:\n      return _Object$assign({}, state, {\n        current: action.product,\n        product: true,\n        home: false,\n        jewel: false,\n        ebook: false,\n        music: false,\n        toy: false,\n        tv: false,\n        candy: false\n      });\n\n    case HOME:\n      return _Object$assign({}, state, {\n        product: false,\n        home: true,\n        jewel: false,\n        ebook: false,\n        music: false,\n        toy: false,\n        tv: false,\n        candy: false\n      });\n\n    case MUSIC:\n      return _Object$assign({}, state, {\n        product: false,\n        home: false,\n        jewel: false,\n        ebook: false,\n        music: true,\n        toy: false,\n        tv: false,\n        candy: false\n      });\n\n    case TV:\n      return _Object$assign({}, state, {\n        product: false,\n        home: false,\n        jewel: false,\n        ebook: false,\n        music: false,\n        toy: false,\n        tv: true,\n        candy: false\n      });\n\n    case JEWEL:\n      return _Object$assign({}, state, {\n        product: false,\n        home: false,\n        jewel: true,\n        ebook: false,\n        music: false,\n        toy: false,\n        tv: false,\n        candy: false\n      });\n\n    case TOY:\n      return _Object$assign({}, state, {\n        product: false,\n        home: false,\n        jewel: false,\n        ebook: false,\n        music: false,\n        toy: true,\n        tv: false,\n        candy: false\n      });\n\n    case CANDY:\n      return _Object$assign({}, state, {\n        product: false,\n        home: false,\n        jewel: false,\n        ebook: false,\n        music: false,\n        toy: false,\n        tv: false,\n        candy: true\n      });\n\n    case EBOOK:\n      return _Object$assign({}, state, {\n        product: false,\n        home: false,\n        jewel: false,\n        ebook: true,\n        music: false,\n        toy: false,\n        tv: false,\n        candy: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst postregister = (state = initialState.postregister, action) => {\n  if (action.type === ON_POST_REGISTER) {\n    return !state;\n  }\n\n  return state;\n};\n\nexport const store = combineReducers({\n  nav,\n  user,\n  greenpost,\n  greenstore,\n  postregister\n});","map":{"version":3,"sources":["/home/felix/Documentos/projects/greenlink/store/reducers.js"],"names":["combineReducers","ON_DOWN","ON_VIEW_NAV","navView","ON_NOTE","ON_NOTIFICATIONS","ON_LOADER","ON_LOGIN","ON_USER","ON_GREENINFO","ON_GREEN_CREATOR","ON_STORE","storeSections","ON_PRODUCTS","ON_POST_REGISTER","initialState","nav","loader","login","down","wallet","notifications","id","notes","view","items","gifts","friendReq","user","owner","mail","pass","name","lastName","birthday","greenPost","likes","comments","wish","perfilImg","originCity","actualCity","primaryShool","secondarySchoool","university","job","posts","green","img","date","author","_id","history","tag","price","description","interest","events","friends","greenpost","info","creator","store","visible","current","home","product","music","ebook","toy","tv","jewel","candy","postregister","state","action","type","option","note","GIFT","NOTES","FRIEND","payload","greenstore","HOME","PRODUCT","MUSIC","TV","EBOOK","CANDY","TOY","JEWEL","products"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\nimport {\n  ON_DOWN, ON_VIEW_NAV,\n  navView,\n  ON_NOTE,\n  ON_NOTIFICATIONS,\n  ON_LOADER,\n  ON_LOGIN,\n  ON_USER,\n  ON_GREENINFO,\n  ON_GREEN_CREATOR,\n  ON_STORE,\n  storeSections,\n  ON_PRODUCTS,\n  ON_POST_REGISTER,\n} from './actions';\n\nexport const initialState = {\n  nav:{\n    loader:0,\n    login: false,\n    down: false,\n    wallet: 0,\n    notifications: {\n      id: '',\n      notes: {\n        view: false,\n        items: [],\n      },\n      gifts: {\n        view: false,\n        items: [],\n      },\n      friendReq:{\n        view: false,\n        items: [],\n      },\n    },\n  },\n  user:{\n    id: '',\n    owner: false,\n    mail: '',\n    pass: '',\n    name: '',\n    lastName: '',\n    birthday: '',\n    greenPost: {\n      likes:[],\n      comments: [],\n      wish: {},\n    },\n    perfilImg: '',\n    originCity: '',\n    actualCity: '',\n    primaryShool: '',\n    secondarySchoool: '',\n    university: '',\n    job: '',\n    posts: [{\n      green:true,\n      img: '',\n      date: '',\n      author: '',\n      _id: '',\n      history: '',\n      comments: [],\n      likes: [],\n      wish:{\n        id: '123456789',\n        name: 'Oreo',\n        img: '/static/store/products/gol-1.jpg',\n        tag: 'gol', price: 100,\n        description:'Lorem ipsum dolor sit amet consectetur adipisicing elit. Necessitatibus, cumque atque, dolore qui, tempora delectus provident saepe dicta minus iusto iste autem? Aut, ipsum. Ipsam illo perspiciatis optio architecto cumque!'\n      }\n    }],\n    interest: [],\n    events: [],\n    friends: [],\n  },\n  greenpost:{\n    info: false,\n    creator: false,\n  },\n  store:{\n    visible: false,\n    current: {},\n    home: false,\n    product: false,\n    music: true,\n    ebook: false,\n    toy: false,\n    tv: false,\n    jewel: false,\n    candy: false,\n    items: [],\n  },\n  postregister: false,\n};\n\nconst nav = (state= initialState.nav, action) => {\n  switch(action.type){\n    case ON_DOWN:\n      return Object.assign({}, state, { down: action.option });\n    case ON_NOTIFICATIONS:\n      return Object.assign({}, state, { notifications: action.notifications });\n    case ON_LOADER:\n      return Object.assign({}, state, { loader: action.loader });\n    case ON_LOGIN:\n      return Object.assign({}, state, { login: action.option });\n    case ON_VIEW_NAV:\n      if(action.note === navView.GIFT){\n        return Object.assign({}, state, {\n          notifications: Object.assign({}, state.notifications, {\n            gifts: Object.assign({}, state.notifications.gifts, { view: true }),\n          })\n        });\n      }\n      if(action.note === navView.NOTES){\n        return Object.assign({}, state, {\n          notifications: Object.assign({}, state.notifications, {\n            notes: Object.assign({}, state.notifications.notes, { view: true }),\n          })\n        });\n      }\n      if(action.note === navView.FRIEND){\n        return Object.assign({}, state, {\n          notifications: Object.assign({}, state.notifications, {\n            friendReq: Object.assign({}, state.notifications.friendReq, { view: true }),\n          })\n        });\n      }\n    case ON_NOTE:\n      if(action.payload.note === navView.GIFT){\n        return Object.assign({}, state, {\n          notifications: Object.assign({}, state.notifications, {\n            gifts: Object.assign({}, state.notifications.gifts, {\n              view: false,\n              items: action.payload.items,\n            })\n          })\n        })\n      }\n      if(action.payload.note === navView.NOTES){\n        return Object.assign({}, state, {\n          notifications: Object.assign({}, state.notifications, {\n            notes: Object.assign({}, state.notifications.notes, {\n              view: false,\n              items: action.payload.items,\n            })\n          })\n        })\n      }\n      if(action.payload.note === navView.FRIEND){\n        return Object.assign({}, state, {\n          notifications: Object.assign({}, state.notifications, {\n            friendReq: Object.assign({}, state.notifications.friendReq, {\n              view: false,\n              items: action.payload.items,\n            })\n          })\n        })\n      }\n    default:\n      return state;\n  }\n};\n\nconst user = (state= initialState.user, action) => {\n  switch(action.type){\n    case ON_USER:\n      return Object.assign({}, state, action.user);\n    default:\n      return state;\n  }\n};\n\nconst greenpost = (state = initialState.greenpost, action) => {\n  switch (action.type) {\n    case ON_GREENINFO:\n      return Object.assign({}, state, { info: !state.info });\n    case ON_GREEN_CREATOR:\n      return Object.assign({}, state, { creator: !state.creator });\n    default:\n      return state;\n  }\n};\n\nconst greenstore = (state = initialState.store, action) => {\n  const { HOME, PRODUCT, MUSIC, TV, EBOOK, CANDY, TOY, JEWEL } = storeSections;\n  switch(action.type){\n    case ON_STORE:\n      return Object.assign({}, state, { visible: !state.visible, home: true });\n    case ON_PRODUCTS:\n      return Object.assign({}, state, { items: action.products });\n    case PRODUCT:\n      return Object.assign({}, state, {\n        current: action.product,\n        product: true,\n        home: false,\n        jewel: false,\n        ebook: false,\n        music: false,\n        toy: false,\n        tv: false,\n        candy: false,\n      });\n    case HOME:\n      return Object.assign({}, state, {\n        product: false,\n        home: true,\n        jewel: false,\n        ebook: false,\n        music: false,\n        toy: false,\n        tv: false,\n        candy: false,\n      });\n    case MUSIC:\n      return Object.assign({}, state, {\n        product: false,\n        home: false,\n        jewel: false,\n        ebook: false,\n        music: true,\n        toy: false,\n        tv: false,\n        candy: false,\n      });\n    case TV:\n      return Object.assign({}, state, {\n        product: false,\n        home: false,\n        jewel: false,\n        ebook: false,\n        music: false,\n        toy: false,\n        tv: true,\n        candy: false,\n      });\n    case JEWEL:\n      return Object.assign({}, state, {\n        product: false,\n        home: false,\n        jewel: true,\n        ebook: false,\n        music: false,\n        toy: false,\n        tv: false,\n        candy: false,\n      });\n    case TOY:\n      return Object.assign({}, state, {\n        product: false,\n        home: false,\n        jewel: false,\n        ebook: false,\n        music: false,\n        toy: true,\n        tv: false,\n        candy: false,\n      });\n    case CANDY:\n      return Object.assign({}, state, {\n        product: false,\n        home: false,\n        jewel: false,\n        ebook: false,\n        music: false,\n        toy: false,\n        tv: false,\n        candy: true,\n      });\n    case EBOOK:\n      return Object.assign({}, state, {\n        product: false,\n        home: false,\n        jewel: false,\n        ebook: true,\n        music: false,\n        toy: false,\n        tv: false,\n        candy: false,\n      });\n    default:\n      return state\n  }\n};\n\nconst postregister = (state = initialState.postregister, action) => {\n  if(action.type === ON_POST_REGISTER){\n    return !state;\n  }\n  return state;\n}\n\nexport const store = combineReducers({\n  nav,\n  user,\n  greenpost,\n  greenstore,\n  postregister,\n});\n"]},"metadata":{},"sourceType":"module"}