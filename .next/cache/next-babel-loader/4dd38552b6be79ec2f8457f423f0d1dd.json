{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ON_LOADER } from '../../store/actions';\nimport Router from 'next/router';\nimport axios from 'axios';\n\nvar MyLink = function MyLink(_ref) {\n  var url = _ref.url,\n      children = _ref.children,\n      cb = _ref.cb;\n  var dispatch = useDispatch();\n\n  var onLink =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var loader, interval;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              loader = 0;\n              interval = setInterval(function () {\n                loader += 15;\n                dispatch({\n                  type: ON_LOADER,\n                  loader: loader\n                });\n              }, 1000);\n\n              if (loader >= 75) {\n                dispatch({\n                  type: ON_LOADER,\n                  loader: 97\n                });\n                clearInterval(interval);\n              }\n\n              try {\n                clearInterval(interval);\n                callbback();\n                Router.replace(url);\n                dispatch({\n                  type: ON_LOADER,\n                  loader: 100\n                });\n              } catch (err) {\n                console.log(err);\n                clearInterval(interval);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onLink() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"button\", {\n    onClick: onLink,\n    type: \"button\",\n    className: \"jsx-2059577519\"\n  }, children, __jsx(_JSXStyle, {\n    id: \"2059577519\"\n  }, [\"button.jsx-2059577519{background:transparent;border:none;padding:0;margin:0;outline:none;}\", \"button.jsx-2059577519:focus{outline:none;}\"]));\n};\n\nexport default MyLink;","map":null,"metadata":{},"sourceType":"module"}