{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport router, { useRouter } from 'next/router';\nimport Layout from '../components/layout/layout';\nimport GreenPost from '../components/greenpost/greenpost';\nimport { useDispatch } from 'react-redux';\nimport { ON_USER, ON_LOGIN, ON_GREENINFO, ON_POST_REGISTER, ON_LOADER, ON_GREENPOST } from '../store/actions';\nimport Space from '../components/space/space';\n\nconst Perfil = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const user = router.query;\n    if (typeof user.posts === 'string') user.posts = JSON.parse(user.posts);\n    if (typeof user.greenPost === 'string') user.greenPost = JSON.parse(user.greenPost);\n    if (typeof user.firstTime === 'string') user.firstTime = JSON.parse(user.firstTime);\n    if (typeof user.owner === 'string') user.owner = JSON.parse(user.owner);\n    if (user.firstTime && user.owner) dispatch({\n      type: ON_POST_REGISTER\n    });\n    dispatch({\n      type: ON_LOADER,\n      loader: 0\n    });\n    dispatch({\n      type: ON_USER,\n      user\n    });\n    dispatch({\n      type: ON_LOGIN,\n      option: true\n    });\n    dispatch({\n      type: ON_GREENPOST,\n      greenpost: user.greenPost[0]\n    });\n  }, [router.query]);\n  return __jsx(Layout, null, console.log(router.query), __jsx(GreenPost, null), __jsx(Space, null));\n};\n\nexport default Perfil;","map":{"version":3,"sources":["/home/felix/Documentos/projects/greenlink/pages/perfil.jsx"],"names":["React","useEffect","router","useRouter","Layout","GreenPost","useDispatch","ON_USER","ON_LOGIN","ON_GREENINFO","ON_POST_REGISTER","ON_LOADER","ON_GREENPOST","Space","Perfil","dispatch","user","query","posts","JSON","parse","greenPost","firstTime","owner","type","loader","option","greenpost","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,aAAlC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,YAA5B,EAA0CC,gBAA1C,EAA4DC,SAA5D,EAAuEC,YAAvE,QAA2F,kBAA3F;AACA,OAAOC,KAAP,MAAkB,2BAAlB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMZ,MAAM,GAAGC,SAAS,EAAxB;AACA,QAAMY,QAAQ,GAAGT,WAAW,EAA5B;AACAL,EAAAA,SAAS,CAAC,MAAK;AACb,UAAMe,IAAI,GAAGd,MAAM,CAACe,KAApB;AACA,QAAG,OAAOD,IAAI,CAACE,KAAZ,KAAuB,QAA1B,EAAoCF,IAAI,CAACE,KAAL,GAAaC,IAAI,CAACC,KAAL,CAAWJ,IAAI,CAACE,KAAhB,CAAb;AACpC,QAAG,OAAOF,IAAI,CAACK,SAAZ,KAA2B,QAA9B,EAAwCL,IAAI,CAACK,SAAL,GAAiBF,IAAI,CAACC,KAAL,CAAWJ,IAAI,CAACK,SAAhB,CAAjB;AACxC,QAAG,OAAOL,IAAI,CAACM,SAAZ,KAA2B,QAA9B,EAAwCN,IAAI,CAACM,SAAL,GAAiBH,IAAI,CAACC,KAAL,CAAWJ,IAAI,CAACM,SAAhB,CAAjB;AACxC,QAAG,OAAON,IAAI,CAACO,KAAZ,KAAuB,QAA1B,EAAoCP,IAAI,CAACO,KAAL,GAAaJ,IAAI,CAACC,KAAL,CAAWJ,IAAI,CAACO,KAAhB,CAAb;AACpC,QAAGP,IAAI,CAACM,SAAL,IAAkBN,IAAI,CAACO,KAA1B,EAAiCR,QAAQ,CAAC;AAAES,MAAAA,IAAI,EAAEd;AAAR,KAAD,CAAR;AACjCK,IAAAA,QAAQ,CAAC;AAAES,MAAAA,IAAI,EAAEb,SAAR;AAAmBc,MAAAA,MAAM,EAAE;AAA3B,KAAD,CAAR;AACAV,IAAAA,QAAQ,CAAC;AAAES,MAAAA,IAAI,EAAEjB,OAAR;AAAiBS,MAAAA;AAAjB,KAAD,CAAR;AACAD,IAAAA,QAAQ,CAAC;AAAES,MAAAA,IAAI,EAAEhB,QAAR;AAAkBkB,MAAAA,MAAM,EAAE;AAA1B,KAAD,CAAR;AACAX,IAAAA,QAAQ,CAAC;AAAES,MAAAA,IAAI,EAAEZ,YAAR;AAAsBe,MAAAA,SAAS,EAAEX,IAAI,CAACK,SAAL,CAAe,CAAf;AAAjC,KAAD,CAAR;AACD,GAXQ,EAWN,CAACnB,MAAM,CAACe,KAAR,CAXM,CAAT;AAaA,SACE,MAAC,MAAD,QACGW,OAAO,CAACC,GAAR,CAAY3B,MAAM,CAACe,KAAnB,CADH,EAEE,MAAC,SAAD,OAFF,EAGE,MAAC,KAAD,OAHF,CADF;AAOD,CAvBD;;AAyBA,eAAeH,MAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport router, { useRouter } from 'next/router';\nimport Layout from '../components/layout/layout';\nimport GreenPost from '../components/greenpost/greenpost';\nimport { useDispatch } from 'react-redux';\nimport { ON_USER, ON_LOGIN, ON_GREENINFO, ON_POST_REGISTER, ON_LOADER, ON_GREENPOST } from '../store/actions';\nimport Space from '../components/space/space';\n\nconst Perfil = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  useEffect(()=> {\n    const user = router.query;\n    if(typeof(user.posts) === 'string') user.posts = JSON.parse(user.posts);\n    if(typeof(user.greenPost) === 'string') user.greenPost = JSON.parse(user.greenPost);\n    if(typeof(user.firstTime) === 'string') user.firstTime = JSON.parse(user.firstTime);\n    if(typeof(user.owner) === 'string') user.owner = JSON.parse(user.owner);\n    if(user.firstTime && user.owner) dispatch({ type: ON_POST_REGISTER });\n    dispatch({ type: ON_LOADER, loader: 0 });\n    dispatch({ type: ON_USER, user });\n    dispatch({ type: ON_LOGIN, option: true });\n    dispatch({ type: ON_GREENPOST, greenpost: user.greenPost[0] });\n  }, [router.query]);\n\n  return(\n    <Layout>\n      {console.log(router.query)}\n      <GreenPost />\n      <Space />\n    </Layout>\n  );\n};\n\nexport default Perfil;\n"]},"metadata":{},"sourceType":"module"}