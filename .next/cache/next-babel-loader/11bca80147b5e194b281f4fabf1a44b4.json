{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar __jsx = React.createElement;\nimport React, { useReducer } from 'react';\nimport './greenpost.scss';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { ON_GREENINFO, ON_GREEN_CREATOR } from '../../store/actions';\nimport classnames from 'classnames';\nimport { faExpandArrowsAlt, faArrowCircleLeft, faUserPlus, faHeart, faGift, faComment, faHome, faShare, faMapMarkerAlt, faDollarSign, faSchool, faMailBulk, faPhone } from '@fortawesome/free-solid-svg-icons';\nimport GreenHome from './home';\nimport Creator from './creator';\nimport Wish from './wish';\n\nvar GreenNav = function GreenNav(_ref) {\n  var setVisible = _ref.setVisible;\n  return __jsx(\"nav\", {\n    className: \"greennav_main_cont\"\n  }, __jsx(\"ul\", null, __jsx(\"li\", null, __jsx(\"button\", {\n    onClick: function onClick() {\n      return setVisible({\n        home: true,\n        wish: false\n      });\n    },\n    title: \"Inicio\"\n  }, __jsx(FontAwesomeIcon, {\n    icon: faHome\n  }))), __jsx(\"li\", null, __jsx(\"button\", {\n    title: \"Reaccionar\"\n  }, __jsx(FontAwesomeIcon, {\n    icon: faHeart\n  }))), __jsx(\"li\", null, __jsx(\"button\", {\n    onClick: function onClick() {\n      return setVisible({\n        home: false,\n        wish: true\n      });\n    },\n    title: \"Ver Deseo\"\n  }, __jsx(FontAwesomeIcon, {\n    icon: faGift\n  }))), __jsx(\"li\", null, __jsx(\"button\", {\n    title: \"Comentar\"\n  }, __jsx(FontAwesomeIcon, {\n    icon: faComment\n  }))), __jsx(\"li\", null, __jsx(\"button\", {\n    title: \"Compartir en mi perfil\"\n  }, __jsx(FontAwesomeIcon, {\n    icon: faShare\n  }))), __jsx(\"li\", null, __jsx(\"button\", {\n    title: \"Abrir en pantala completa\"\n  }, __jsx(FontAwesomeIcon, {\n    icon: faExpandArrowsAlt\n  })))));\n};\n\nvar GreenInfo = function GreenInfo() {\n  var info = useSelector(function (state) {\n    return state.greenpost.info;\n  });\n  var dispatch = useDispatch();\n\n  var _useReducer = useReducer(function (state, next) {\n    return _objectSpread({}, state, next);\n  }, {\n    home: true,\n    wish: false\n  }),\n      visible = _useReducer[0],\n      setVisible = _useReducer[1];\n\n  return __jsx(\"div\", {\n    className: classnames({\n      greeninfo_main_cont: true,\n      greeninfo_main_cont_visible: info\n    })\n  }, __jsx(\"div\", {\n    className: \"section_main_cont\"\n  }, visible.home && __jsx(GreenHome, null), visible.wish && __jsx(Wish, null)), __jsx(\"footer\", null, __jsx(\"button\", {\n    onClick: function onClick() {\n      return dispatch({\n        type: ON_GREEN_CREATOR\n      });\n    },\n    title: \"Crear Post\"\n  }, \"GreenPost\"), __jsx(GreenNav, {\n    setVisible: setVisible\n  })));\n};\n\nvar BtnInfo = function BtnInfo() {\n  var info = useSelector(function (state) {\n    return state.greenpost.info;\n  });\n  var green = useSelector(function (state) {\n    return state.greenpost;\n  });\n  var dispatch = useDispatch();\n  return __jsx(\"button\", {\n    title: info ? \"Ocultar\" : \"Ver\",\n    onClick: function onClick() {\n      return dispatch({\n        type: ON_GREENINFO\n      });\n    },\n    className: classnames({\n      btngreen_info: true,\n      btngreen_info_rotate: info\n    })\n  }, __jsx(FontAwesomeIcon, {\n    icon: faArrowCircleLeft\n  }));\n};\n\nvar GreenPost = function GreenPost() {\n  var green = useSelector(function (state) {\n    return state.greenpost.current;\n  });\n  var img = green.img;\n  return __jsx(\"div\", {\n    style: {\n      backgroundImage: \"url(\".concat(img, \")\")\n    },\n    className: \"greenpost_main_cont\"\n  }, __jsx(Creator, null), __jsx(GreenInfo, null), __jsx(BtnInfo, null));\n};\n\nexport default GreenPost;","map":{"version":3,"sources":["/home/felix/Documentos/projects/greenlink/components/greenpost/greenpost.jsx"],"names":["React","useReducer","useSelector","useDispatch","FontAwesomeIcon","ON_GREENINFO","ON_GREEN_CREATOR","classnames","faExpandArrowsAlt","faArrowCircleLeft","faUserPlus","faHeart","faGift","faComment","faHome","faShare","faMapMarkerAlt","faDollarSign","faSchool","faMailBulk","faPhone","GreenHome","Creator","Wish","GreenNav","setVisible","home","wish","GreenInfo","info","state","greenpost","dispatch","next","visible","greeninfo_main_cont","greeninfo_main_cont_visible","type","BtnInfo","green","btngreen_info","btngreen_info_rotate","GreenPost","current","img","backgroundImage"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAO,kBAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,YAAT,EAAuBC,gBAAvB,QAA+C,qBAA/C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SACEC,iBADF,EAEEC,iBAFF,EAGEC,UAHF,EAIEC,OAJF,EAKEC,MALF,EAMEC,SANF,EAOEC,MAPF,EAQEC,OARF,EASEC,cATF,EAUEC,YAVF,EAWEC,QAXF,EAYEC,UAZF,EAaEC,OAbF,QAcO,mCAdP;AAeA,OAAOC,SAAP,MAAsB,QAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAEnC,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,kBACE,kBACE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAIA,UAAU,CAAC;AAAEC,QAAAA,IAAI,EAAE,IAAR;AAAcC,QAAAA,IAAI,EAAE;AAApB,OAAD,CAAd;AAAA,KAAjB;AAA8D,IAAA,KAAK,EAAC;AAApE,KAA6E,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEb;AAAvB,IAA7E,CADF,CADF,EAIE,kBACE;AAAQ,IAAA,KAAK,EAAC;AAAd,KAA2B,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEH;AAAvB,IAA3B,CADF,CAJF,EAOE,kBACE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAIc,UAAU,CAAC;AAAEC,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,IAAI,EAAE;AAArB,OAAD,CAAd;AAAA,KAAjB;AAA8D,IAAA,KAAK,EAAC;AAApE,KAAgF,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEf;AAAvB,IAAhF,CADF,CAPF,EAUE,kBACE;AAAQ,IAAA,KAAK,EAAC;AAAd,KAAyB,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEC;AAAvB,IAAzB,CADF,CAVF,EAaE,kBACE;AAAQ,IAAA,KAAK,EAAC;AAAd,KAAuC,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEE;AAAvB,IAAvC,CADF,CAbF,EAgBE,kBACE;AAAQ,IAAA,KAAK,EAAC;AAAd,KAA0C,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEP;AAAvB,IAA1C,CADF,CAhBF,CADF,CADF;AAwBD,CA1BD;;AA4BA,IAAMoB,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,MAAMC,IAAI,GAAG3B,WAAW,CAAC,UAAA4B,KAAK;AAAA,WAAIA,KAAK,CAACC,SAAN,CAAgBF,IAApB;AAAA,GAAN,CAAxB;AACA,MAAMG,QAAQ,GAAG7B,WAAW,EAA5B;;AAFsB,oBAGQF,UAAU,CAAC,UAAC6B,KAAD,EAAQG,IAAR;AAAA,6BAAuBH,KAAvB,EAAiCG,IAAjC;AAAA,GAAD,EAA0C;AAChFP,IAAAA,IAAI,EAAE,IAD0E;AAEhFC,IAAAA,IAAI,EAAE;AAF0E,GAA1C,CAHlB;AAAA,MAGfO,OAHe;AAAA,MAGNT,UAHM;;AAQtB,SACE;AAAK,IAAA,SAAS,EAAElB,UAAU,CAAC;AACzB4B,MAAAA,mBAAmB,EAAE,IADI;AAEzBC,MAAAA,2BAA2B,EAAEP;AAFJ,KAAD;AAA1B,KAIE;AAAK,IAAA,SAAS,EAAC;AAAf,KACIK,OAAO,CAACR,IAAR,IAAgB,MAAC,SAAD,OADpB,EAEIQ,OAAO,CAACP,IAAR,IAAgB,MAAC,IAAD,OAFpB,CAJF,EAQE,sBACE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAKK,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAE/B;AAAR,OAAD,CAAb;AAAA,KAAjB;AAA4D,IAAA,KAAK,EAAC;AAAlE,iBADF,EAEE,MAAC,QAAD;AACE,IAAA,UAAU,EAAEmB;AADd,IAFF,CARF,CADF;AAiBD,CAzBD;;AA2BA,IAAMa,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,MAAMT,IAAI,GAAG3B,WAAW,CAAC,UAAA4B,KAAK;AAAA,WAAIA,KAAK,CAACC,SAAN,CAAgBF,IAApB;AAAA,GAAN,CAAxB;AACA,MAAMU,KAAK,GAAGrC,WAAW,CAAC,UAAA4B,KAAK;AAAA,WAAIA,KAAK,CAACC,SAAV;AAAA,GAAN,CAAzB;AACA,MAAMC,QAAQ,GAAG7B,WAAW,EAA5B;AACA,SACE;AACE,IAAA,KAAK,EAAG0B,IAAI,GAAG,SAAH,GAAe,KAD7B;AAEE,IAAA,OAAO,EAAE;AAAA,aAAKG,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAEhC;AAAR,OAAD,CAAb;AAAA,KAFX;AAGE,IAAA,SAAS,EAAEE,UAAU,CAAC;AACpBiC,MAAAA,aAAa,EAAE,IADK;AAEpBC,MAAAA,oBAAoB,EAAEZ;AAFF,KAAD;AAHvB,KAQE,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEpB;AAAvB,IARF,CADF;AAYD,CAhBD;;AAkBA,IAAMiC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,MAAMH,KAAK,GAAGrC,WAAW,CAAC,UAAA4B,KAAK;AAAA,WAAIA,KAAK,CAACC,SAAN,CAAgBY,OAApB;AAAA,GAAN,CAAzB;AACA,MAAMC,GAAG,GAAGL,KAAK,CAACK,GAAlB;AACA,SACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,gBAASD,GAAT;AAAjB,KAAZ;AAAgD,IAAA,SAAS,EAAC;AAA1D,KACE,MAAC,OAAD,OADF,EAEE,MAAC,SAAD,OAFF,EAGE,MAAC,OAAD,OAHF,CADF;AAOD,CAVD;;AAYA,eAAeF,SAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport './greenpost.scss';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { ON_GREENINFO, ON_GREEN_CREATOR } from '../../store/actions';\nimport classnames from 'classnames';\nimport {\n  faExpandArrowsAlt,\n  faArrowCircleLeft,\n  faUserPlus,\n  faHeart,\n  faGift,\n  faComment,\n  faHome,\n  faShare,\n  faMapMarkerAlt,\n  faDollarSign,\n  faSchool,\n  faMailBulk,\n  faPhone,\n} from '@fortawesome/free-solid-svg-icons';\nimport GreenHome from './home';\nimport Creator from './creator';\nimport Wish from './wish';\n\nconst GreenNav = ({ setVisible }) => {\n\n  return(\n    <nav className=\"greennav_main_cont\">\n      <ul>\n        <li>\n          <button onClick={()=>setVisible({ home: true, wish: false })} title=\"Inicio\"><FontAwesomeIcon icon={faHome} /></button>\n        </li>\n        <li>\n          <button title=\"Reaccionar\"><FontAwesomeIcon icon={faHeart} /></button>\n        </li>\n        <li>\n          <button onClick={()=>setVisible({ home: false, wish: true })} title=\"Ver Deseo\"><FontAwesomeIcon icon={faGift} /></button>\n        </li>\n        <li>\n          <button title=\"Comentar\"><FontAwesomeIcon icon={faComment} /></button>\n        </li>\n        <li>\n          <button title=\"Compartir en mi perfil\"><FontAwesomeIcon icon={faShare} /></button>\n        </li>\n        <li>\n          <button title=\"Abrir en pantala completa\"><FontAwesomeIcon icon={faExpandArrowsAlt} /></button>\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nconst GreenInfo = () => {\n  const info = useSelector(state => state.greenpost.info);\n  const dispatch = useDispatch();\n  const [visible, setVisible] = useReducer((state, next) => ({ ...state, ...next }),{\n    home: true,\n    wish: false,\n  })\n\n  return(\n    <div className={classnames({\n      greeninfo_main_cont: true,\n      greeninfo_main_cont_visible: info,\n    })}>\n      <div className=\"section_main_cont\">\n        { visible.home && <GreenHome /> }\n        { visible.wish && <Wish /> }\n      </div>\n      <footer>\n        <button onClick={()=> dispatch({ type: ON_GREEN_CREATOR })} title=\"Crear Post\">GreenPost</button>\n        <GreenNav\n          setVisible={setVisible}\n        />\n      </footer>\n    </div>\n  )\n};\n\nconst BtnInfo = () => {\n  const info = useSelector(state => state.greenpost.info);\n  const green = useSelector(state => state.greenpost);\n  const dispatch = useDispatch();\n  return(\n    <button\n      title={ info ? \"Ocultar\" : \"Ver\" }\n      onClick={()=> dispatch({ type: ON_GREENINFO })}\n      className={classnames({\n        btngreen_info: true,\n        btngreen_info_rotate: info,\n      })}\n    >\n      <FontAwesomeIcon icon={faArrowCircleLeft} />\n    </button>\n  )\n}\n\nconst GreenPost = () => {\n  const green = useSelector(state => state.greenpost.current);\n  const img = green.img;\n  return(\n    <div style={{ backgroundImage: `url(${img})` }} className=\"greenpost_main_cont\">\n      <Creator />\n      <GreenInfo />\n      <BtnInfo />\n    </div>\n  )\n}\n\nexport default GreenPost;\n"]},"metadata":{},"sourceType":"module"}