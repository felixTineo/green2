{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/felix/Documentos/projects/greenlink/components/greenpost/creator.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useReducer } from 'react';\nimport './creator.scss';\nimport { Modal } from 'reactstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ON_GREEN_CREATOR } from '../../store/actions';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCamera } from '@fortawesome/free-solid-svg-icons';\nimport Store from '../store/store';\n\nvar GreenPost = function GreenPost(_ref) {\n  var img = _ref.img,\n      setImg = _ref.setImg,\n      onImg = _ref.onImg;\n  return __jsx(\"div\", {\n    style: {\n      backgroundImage: \"url(\".concat(img, \")\")\n    },\n    className: \"creator_greenpost_main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"green\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    id: \"green\",\n    name: \"green\",\n    onChange: onImg,\n    type: \"file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), __jsx(FontAwesomeIcon, {\n    icon: faCamera,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })));\n};\n\nvar Creator = function Creator() {\n  var visible = useSelector(function (state) {\n    return state.greenpost.creator;\n  });\n  var dispatch = useDispatch();\n\n  var _useReducer = useReducer(function (state, next) {\n    return _objectSpread({}, state, next);\n  }, {\n    green: true,\n    store: false\n  }),\n      section = _useReducer[0],\n      setSection = _useReducer[1];\n\n  var _useState = useState(false),\n      store = _useState[0],\n      setStore = _useState[1];\n\n  var _useState2 = useState('/static/random/r16.jpg'),\n      img = _useState2[0],\n      setImg = _useState2[1];\n\n  var _useState3 = useState(''),\n      history = _useState3[0],\n      setHistory = _useState3[1];\n\n  var onImg = function onImg(e) {\n    var img = e.target.files[0];\n    var reader = new FileReader();\n\n    reader.onloadend = function () {\n      if (reader.result) {\n        setImg(reader.result);\n      } else {\n        setImg('/static/random/r16.jpg');\n      }\n    };\n\n    reader.readAsDataURL(img);\n  };\n\n  return __jsx(Modal, {\n    isOpen: visible,\n    style: {\n      maxWidth: '90vw'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"creator_main_cont\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"GreenPost\"), __jsx(\"button\", {\n    onClick: function onClick() {\n      return dispatch({\n        type: ON_GREEN_CREATOR\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"X\")), __jsx(\"div\", {\n    className: \"body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, section.green && __jsx(GreenPost, {\n    onImg: onImg,\n    img: img,\n    setImg: setImg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), section.store && __jsx(Store, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), __jsx(\"footer\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })));\n};\n\nexport default Creator;","map":{"version":3,"sources":["/home/felix/Documentos/projects/greenlink/components/greenpost/creator.jsx"],"names":["React","useState","useReducer","Modal","useSelector","useDispatch","ON_GREEN_CREATOR","FontAwesomeIcon","faCamera","Store","GreenPost","img","setImg","onImg","backgroundImage","Creator","visible","state","greenpost","creator","dispatch","next","green","store","section","setSection","setStore","history","setHistory","e","target","files","reader","FileReader","onloadend","result","readAsDataURL","maxWidth","type"],"mappings":"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","sourcesContent":["import React, { useState, useReducer } from 'react';\nimport './creator.scss';\nimport { Modal } from 'reactstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ON_GREEN_CREATOR } from '../../store/actions';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCamera } from '@fortawesome/free-solid-svg-icons';\nimport Store from '../store/store';\n\nconst GreenPost = ({ img, setImg, onImg }) => {\n  return(\n    <div style={{ backgroundImage: `url(${img})`}} className=\"creator_greenpost_main\">\n      <label htmlFor=\"green\">\n        <input id=\"green\" name=\"green\" onChange={onImg} type=\"file\"/>\n        <FontAwesomeIcon icon={faCamera} />\n      </label>\n    </div>\n  )\n}\n\nconst Creator = () => {\n  const visible = useSelector(state => state.greenpost.creator);\n  const dispatch = useDispatch();\n  const [section, setSection] = useReducer((state, next) => ({ ...state, ...next }),{\n    green: true,\n    store: false,\n  })\n  const [store, setStore] = useState(false);\n  const [img, setImg]   = useState('/static/random/r16.jpg');\n  const [history, setHistory] = useState('');\n  const onImg = (e) => {\n    const img = e.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend = ()=> {\n      if(reader.result){\n        setImg(reader.result);\n      } else {\n        setImg('/static/random/r16.jpg');\n      }\n    };\n    reader.readAsDataURL(img);\n  }\n\n  return(\n    <Modal isOpen={visible} style={{ maxWidth: '90vw' }}>\n      <div className=\"creator_main_cont\">\n        <header>\n          <p>GreenPost</p>\n          <button onClick={()=> dispatch({ type: ON_GREEN_CREATOR })}>X</button>\n        </header>\n        <div className=\"body\">\n          { section.green && <GreenPost onImg={onImg} img={img} setImg={setImg} /> }\n          { section.store && <Store /> }\n        </div>\n        <footer>\n        </footer>\n      </div>\n    </Modal>\n  )\n}\n\nexport default Creator;\n"]},"metadata":{},"sourceType":"module"}