{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar __jsx = React.createElement;\nimport React, { useReducer, useState, useEffect } from 'react';\nimport './greenpost.scss';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { ON_GREENINFO, ON_GREEN_CREATOR, ON_GREEN_LIKE, OFF_GREEN_LIKE } from '../../store/actions';\nimport classnames from 'classnames';\nimport { faExpandArrowsAlt, faArrowCircleLeft, faUserPlus, faHeart, faGift, faComment, faHome, faShare, faMapMarkerAlt, faDollarSign, faSchool, faMailBulk, faPhone } from '@fortawesome/free-solid-svg-icons';\nimport GreenHome from './home';\nimport Wish from './wish';\nimport Comment from './comment';\nimport Creator from './creator';\nimport axios from 'axios';\nimport { Modal } from 'reactstrap';\n\nconst GreenNav = ({\n  setVisible\n}) => {\n  const uid = useSelector(state => state.nav.notifications.id);\n  const pid = useSelector(state => state.greenpost.current._id);\n  const likes = useSelector(state => state.greenpost.current.likes);\n  const dispatch = useDispatch();\n  const {\n    0: like,\n    1: setLike\n  } = useState(false);\n  useEffect(() => {\n    const checkLike = likes.find(like => like._id === uid);\n    if (checkLike) setLike(true);\n  }, [likes, uid]);\n\n  const onReact = async () => {\n    try {\n      const res = await axios.get(`/green/like/${pid}`);\n\n      if (!like) {\n        dispatch({\n          type: ON_GREEN_LIKE,\n          like: res.data\n        });\n        setLike(true);\n      } else {\n        dispatch({\n          type: OFF_GREEN_LIKE,\n          uid\n        });\n        setLike(false);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return __jsx(\"nav\", {\n    className: \"greennav_main_cont\"\n  }, __jsx(\"ul\", null, __jsx(\"li\", null, __jsx(\"button\", {\n    onClick: () => setVisible({\n      home: true,\n      wish: false,\n      comments: false\n    }),\n    title: \"Inicio\"\n  }, __jsx(FontAwesomeIcon, {\n    icon: faHome\n  }))), __jsx(\"li\", null, __jsx(\"button\", {\n    onClick: onReact,\n    style: like ? {\n      background: \"#8bb940\",\n      color: \"#ffffff\"\n    } : {\n      background: \"transparent\",\n      color: \"#ffffff\"\n    },\n    title: \"Reaccionar\"\n  }, __jsx(FontAwesomeIcon, {\n    icon: faHeart\n  }))), __jsx(\"li\", null, __jsx(\"button\", {\n    onClick: () => setVisible({\n      home: false,\n      wish: true,\n      comments: false\n    }),\n    title: \"Ver Deseo\"\n  }, __jsx(FontAwesomeIcon, {\n    icon: faGift\n  }))), __jsx(\"li\", null, __jsx(\"button\", {\n    onClick: () => setVisible({\n      home: false,\n      wish: false,\n      comments: true\n    }),\n    title: \"Comentar\"\n  }, __jsx(FontAwesomeIcon, {\n    icon: faComment\n  }))), __jsx(\"li\", null, __jsx(\"button\", {\n    title: \"Compartir en mi perfil\"\n  }, __jsx(FontAwesomeIcon, {\n    icon: faShare\n  }))), __jsx(\"li\", null, __jsx(\"button\", {\n    title: \"Abrir en pantala completa\"\n  }, __jsx(FontAwesomeIcon, {\n    icon: faExpandArrowsAlt\n  })))));\n};\n\nconst GreenInfo = () => {\n  const info = useSelector(state => state.greenpost.info);\n  const dispatch = useDispatch();\n  const {\n    0: visible,\n    1: setVisible\n  } = useReducer((state, next) => _objectSpread({}, state, next), {\n    home: true,\n    wish: false,\n    comments: false\n  });\n  return __jsx(\"div\", {\n    className: classnames({\n      greeninfo_main_cont: true,\n      greeninfo_main_cont_visible: info\n    })\n  }, __jsx(\"div\", {\n    className: \"section_main_cont\"\n  }, visible.home && __jsx(GreenHome, null), visible.wish && __jsx(Wish, null), visible.comments && __jsx(Comment, null)), __jsx(\"footer\", null, __jsx(\"button\", {\n    onClick: () => dispatch({\n      type: ON_GREEN_CREATOR\n    }),\n    title: \"Crear Post\"\n  }, \"GreenPost\"), __jsx(GreenNav, {\n    setVisible: setVisible\n  })));\n};\n\nconst BtnInfo = () => {\n  const info = useSelector(state => state.greenpost.info);\n  const green = useSelector(state => state.greenpost);\n  const dispatch = useDispatch();\n  return __jsx(\"button\", {\n    title: info ? \"Ocultar\" : \"Ver\",\n    onClick: () => dispatch({\n      type: ON_GREENINFO,\n      option: !info\n    }),\n    className: classnames({\n      btngreen_info: true,\n      btngreen_info_rotate: info\n    })\n  }, __jsx(FontAwesomeIcon, {\n    icon: faArrowCircleLeft\n  }));\n};\n\nconst GreenPost = () => {\n  const green = useSelector(state => state.greenpost.current);\n  const greenCreator = useSelector(state => state.greenpost.creator);\n  const img = green.img;\n  return __jsx(\"div\", {\n    style: {\n      backgroundImage: `url(${img})`\n    },\n    className: \"greenpost_main_cont\"\n  }, __jsx(Modal, {\n    style: {\n      minWidth: '80%'\n    },\n    isOpen: greenCreator\n  }, __jsx(Creator, {\n    green: true\n  })), __jsx(GreenInfo, null), __jsx(BtnInfo, null));\n};\n\nexport default GreenPost;","map":{"version":3,"sources":["/home/felix/Documentos/projects/greenlink/components/greenpost/greenpost.jsx"],"names":["React","useReducer","useState","useEffect","useSelector","useDispatch","FontAwesomeIcon","ON_GREENINFO","ON_GREEN_CREATOR","ON_GREEN_LIKE","OFF_GREEN_LIKE","classnames","faExpandArrowsAlt","faArrowCircleLeft","faUserPlus","faHeart","faGift","faComment","faHome","faShare","faMapMarkerAlt","faDollarSign","faSchool","faMailBulk","faPhone","GreenHome","Wish","Comment","Creator","axios","Modal","GreenNav","setVisible","uid","state","nav","notifications","id","pid","greenpost","current","_id","likes","dispatch","like","setLike","checkLike","find","onReact","res","get","type","data","err","console","log","home","wish","comments","background","color","GreenInfo","info","visible","next","greeninfo_main_cont","greeninfo_main_cont_visible","BtnInfo","green","option","btngreen_info","btngreen_info_rotate","GreenPost","greenCreator","creator","img","backgroundImage","minWidth"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAO,kBAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,YAAT,EAAuBC,gBAAvB,EAAyCC,aAAzC,EAAwDC,cAAxD,QAA8E,qBAA9E;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SACEC,iBADF,EAEEC,iBAFF,EAGEC,UAHF,EAIEC,OAJF,EAKEC,MALF,EAMEC,SANF,EAOEC,MAPF,EAQEC,OARF,EASEC,cATF,EAUEC,YAVF,EAWEC,QAXF,EAYEC,UAZF,EAaEC,OAbF,QAcO,mCAdP;AAeA,OAAOC,SAAP,MAAsB,QAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,YAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACnC,QAAMC,GAAG,GAAG7B,WAAW,CAAC8B,KAAK,IAAIA,KAAK,CAACC,GAAN,CAAUC,aAAV,CAAwBC,EAAlC,CAAvB;AACA,QAAMC,GAAG,GAAGlC,WAAW,CAAC8B,KAAK,IAAIA,KAAK,CAACK,SAAN,CAAgBC,OAAhB,CAAwBC,GAAlC,CAAvB;AACA,QAAMC,KAAK,GAAGtC,WAAW,CAAC8B,KAAK,IAAIA,KAAK,CAACK,SAAN,CAAgBC,OAAhB,CAAwBE,KAAlC,CAAzB;AACA,QAAMC,QAAQ,GAAGtC,WAAW,EAA5B;AACA,QAAM;AAAA,OAACuC,IAAD;AAAA,OAAOC;AAAP,MAAkB3C,QAAQ,CAAC,KAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM2C,SAAS,GAAGJ,KAAK,CAACK,IAAN,CAAWH,IAAI,IAAIA,IAAI,CAACH,GAAL,KAAaR,GAAhC,CAAlB;AACA,QAAGa,SAAH,EAAcD,OAAO,CAAC,IAAD,CAAP;AACf,GAHQ,EAGP,CAACH,KAAD,EAAQT,GAAR,CAHO,CAAT;;AAKA,QAAMe,OAAO,GAAG,YAAW;AACzB,QAAG;AACD,YAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CAAW,eAAcZ,GAAI,EAA7B,CAAlB;;AACA,UAAG,CAACM,IAAJ,EAAS;AACPD,QAAAA,QAAQ,CAAC;AAAEQ,UAAAA,IAAI,EAAE1C,aAAR;AAAuBmC,UAAAA,IAAI,EAAEK,GAAG,CAACG;AAAjC,SAAD,CAAR;AACAP,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD,OAHD,MAGO;AACLF,QAAAA,QAAQ,CAAC;AAAEQ,UAAAA,IAAI,EAAEzC,cAAR;AAAwBuB,UAAAA;AAAxB,SAAD,CAAR;AACAY,QAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF,KATD,CASC,OAAMQ,GAAN,EAAU;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,GAbD;;AAcA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,kBACE,kBACE;AAAQ,IAAA,OAAO,EAAE,MAAIrB,UAAU,CAAC;AAAEwB,MAAAA,IAAI,EAAE,IAAR;AAAcC,MAAAA,IAAI,EAAE,KAApB;AAA2BC,MAAAA,QAAQ,EAAE;AAArC,KAAD,CAA/B;AAA+E,IAAA,KAAK,EAAC;AAArF,KAA8F,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAExC;AAAvB,IAA9F,CADF,CADF,EAIE,kBACE;AAAQ,IAAA,OAAO,EAAE8B,OAAjB;AAA0B,IAAA,KAAK,EAAGJ,IAAI,GAAG;AAAEe,MAAAA,UAAU,EAAE,SAAd;AAAyBC,MAAAA,KAAK,EAAE;AAAhC,KAAH,GAAiD;AAAED,MAAAA,UAAU,EAAE,aAAd;AAA6BC,MAAAA,KAAK,EAAE;AAApC,KAAvF;AAAyI,IAAA,KAAK,EAAC;AAA/I,KAA4J,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAE7C;AAAvB,IAA5J,CADF,CAJF,EAOE,kBACE;AAAQ,IAAA,OAAO,EAAE,MAAIiB,UAAU,CAAC;AAAEwB,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,IAAI,EAAE,IAArB;AAA2BC,MAAAA,QAAQ,EAAE;AAArC,KAAD,CAA/B;AAA+E,IAAA,KAAK,EAAC;AAArF,KAAiG,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAE1C;AAAvB,IAAjG,CADF,CAPF,EAUE,kBACE;AAAQ,IAAA,OAAO,EAAE,MAAIgB,UAAU,CAAC;AAAEwB,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,IAAI,EAAE,KAArB;AAA4BC,MAAAA,QAAQ,EAAE;AAAtC,KAAD,CAA/B;AAA+E,IAAA,KAAK,EAAC;AAArF,KAAgG,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEzC;AAAvB,IAAhG,CADF,CAVF,EAaE,kBACE;AAAQ,IAAA,KAAK,EAAC;AAAd,KAAuC,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEE;AAAvB,IAAvC,CADF,CAbF,EAgBE,kBACE;AAAQ,IAAA,KAAK,EAAC;AAAd,KAA0C,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEP;AAAvB,IAA1C,CADF,CAhBF,CADF,CADF;AAwBD,CAlDD;;AAoDA,MAAMiD,SAAS,GAAG,MAAM;AACtB,QAAMC,IAAI,GAAG1D,WAAW,CAAC8B,KAAK,IAAIA,KAAK,CAACK,SAAN,CAAgBuB,IAA1B,CAAxB;AACA,QAAMnB,QAAQ,GAAGtC,WAAW,EAA5B;AACA,QAAM;AAAA,OAAC0D,OAAD;AAAA,OAAU/B;AAAV,MAAwB/B,UAAU,CAAC,CAACiC,KAAD,EAAQ8B,IAAR,uBAAuB9B,KAAvB,EAAiC8B,IAAjC,CAAD,EAA0C;AAChFR,IAAAA,IAAI,EAAE,IAD0E;AAEhFC,IAAAA,IAAI,EAAE,KAF0E;AAGhFC,IAAAA,QAAQ,EAAE;AAHsE,GAA1C,CAAxC;AAMA,SACE;AAAK,IAAA,SAAS,EAAE/C,UAAU,CAAC;AACzBsD,MAAAA,mBAAmB,EAAE,IADI;AAEzBC,MAAAA,2BAA2B,EAAEJ;AAFJ,KAAD;AAA1B,KAIE;AAAK,IAAA,SAAS,EAAC;AAAf,KACIC,OAAO,CAACP,IAAR,IAAgB,MAAC,SAAD,OADpB,EAEIO,OAAO,CAACN,IAAR,IAAgB,MAAC,IAAD,OAFpB,EAGIM,OAAO,CAACL,QAAR,IAAoB,MAAC,OAAD,OAHxB,CAJF,EASE,sBACE;AAAQ,IAAA,OAAO,EAAE,MAAKf,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE3C;AAAR,KAAD,CAA9B;AAA4D,IAAA,KAAK,EAAC;AAAlE,iBADF,EAEE,MAAC,QAAD;AACE,IAAA,UAAU,EAAEwB;AADd,IAFF,CATF,CADF;AAkBD,CA3BD;;AA6BA,MAAMmC,OAAO,GAAG,MAAM;AACpB,QAAML,IAAI,GAAG1D,WAAW,CAAC8B,KAAK,IAAIA,KAAK,CAACK,SAAN,CAAgBuB,IAA1B,CAAxB;AACA,QAAMM,KAAK,GAAGhE,WAAW,CAAC8B,KAAK,IAAIA,KAAK,CAACK,SAAhB,CAAzB;AACA,QAAMI,QAAQ,GAAGtC,WAAW,EAA5B;AACA,SACE;AACE,IAAA,KAAK,EAAGyD,IAAI,GAAG,SAAH,GAAe,KAD7B;AAEE,IAAA,OAAO,EAAE,MAAKnB,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE5C,YAAR;AAAsB8D,MAAAA,MAAM,EAAE,CAACP;AAA/B,KAAD,CAFxB;AAGE,IAAA,SAAS,EAAEnD,UAAU,CAAC;AACpB2D,MAAAA,aAAa,EAAE,IADK;AAEpBC,MAAAA,oBAAoB,EAAET;AAFF,KAAD;AAHvB,KAQE,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEjD;AAAvB,IARF,CADF;AAYD,CAhBD;;AAkBA,MAAM2D,SAAS,GAAG,MAAM;AACtB,QAAMJ,KAAK,GAAGhE,WAAW,CAAC8B,KAAK,IAAIA,KAAK,CAACK,SAAN,CAAgBC,OAA1B,CAAzB;AACA,QAAMiC,YAAY,GAAGrE,WAAW,CAAC8B,KAAK,IAAIA,KAAK,CAACK,SAAN,CAAgBmC,OAA1B,CAAhC;AACA,QAAMC,GAAG,GAAGP,KAAK,CAACO,GAAlB;AACA,SACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAG,OAAMD,GAAI;AAA9B,KAAZ;AAAgD,IAAA,SAAS,EAAC;AAA1D,KACE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEE,MAAAA,QAAQ,EAAE;AAAZ,KAAd;AAAmC,IAAA,MAAM,EAAEJ;AAA3C,KACE,MAAC,OAAD;AAAS,IAAA,KAAK;AAAd,IADF,CADF,EAIE,MAAC,SAAD,OAJF,EAKE,MAAC,OAAD,OALF,CADF;AASD,CAbD;;AAeA,eAAeD,SAAf","sourcesContent":["import React, { useReducer, useState, useEffect } from 'react';\nimport './greenpost.scss';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { ON_GREENINFO, ON_GREEN_CREATOR, ON_GREEN_LIKE, OFF_GREEN_LIKE } from '../../store/actions';\nimport classnames from 'classnames';\nimport {\n  faExpandArrowsAlt,\n  faArrowCircleLeft,\n  faUserPlus,\n  faHeart,\n  faGift,\n  faComment,\n  faHome,\n  faShare,\n  faMapMarkerAlt,\n  faDollarSign,\n  faSchool,\n  faMailBulk,\n  faPhone,\n} from '@fortawesome/free-solid-svg-icons';\nimport GreenHome from './home';\nimport Wish from './wish';\nimport Comment from './comment';\nimport Creator from './creator';\nimport axios from 'axios';\nimport { Modal } from 'reactstrap';\n\nconst GreenNav = ({ setVisible }) => {\n  const uid = useSelector(state => state.nav.notifications.id);\n  const pid = useSelector(state => state.greenpost.current._id);\n  const likes = useSelector(state => state.greenpost.current.likes);\n  const dispatch = useDispatch();\n  const [like, setLike] = useState(false);\n\n  useEffect(() => {\n    const checkLike = likes.find(like => like._id === uid);\n    if(checkLike) setLike(true);\n  },[likes, uid]);\n\n  const onReact = async() => {\n    try{\n      const res = await axios.get(`/green/like/${pid}`);\n      if(!like){\n        dispatch({ type: ON_GREEN_LIKE, like: res.data });\n        setLike(true);\n      } else {\n        dispatch({ type: OFF_GREEN_LIKE, uid });\n        setLike(false);\n      }\n    }catch(err){\n      console.log(err);\n    }\n  }\n  return(\n    <nav className=\"greennav_main_cont\">\n      <ul>\n        <li>\n          <button onClick={()=>setVisible({ home: true, wish: false, comments: false })} title=\"Inicio\"><FontAwesomeIcon icon={faHome} /></button>\n        </li>\n        <li>\n          <button onClick={onReact} style={ like ? { background: \"#8bb940\", color: \"#ffffff\" } : { background: \"transparent\", color: \"#ffffff\" } } title=\"Reaccionar\"><FontAwesomeIcon icon={faHeart} /></button>\n        </li>\n        <li>\n          <button onClick={()=>setVisible({ home: false, wish: true, comments: false })} title=\"Ver Deseo\"><FontAwesomeIcon icon={faGift} /></button>\n        </li>\n        <li>\n          <button onClick={()=>setVisible({ home: false, wish: false, comments: true })} title=\"Comentar\"><FontAwesomeIcon icon={faComment} /></button>\n        </li>\n        <li>\n          <button title=\"Compartir en mi perfil\"><FontAwesomeIcon icon={faShare} /></button>\n        </li>\n        <li>\n          <button title=\"Abrir en pantala completa\"><FontAwesomeIcon icon={faExpandArrowsAlt} /></button>\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nconst GreenInfo = () => {\n  const info = useSelector(state => state.greenpost.info);\n  const dispatch = useDispatch();\n  const [visible, setVisible] = useReducer((state, next) => ({ ...state, ...next }),{\n    home: true,\n    wish: false,\n    comments: false,\n  })\n\n  return(\n    <div className={classnames({\n      greeninfo_main_cont: true,\n      greeninfo_main_cont_visible: info,\n    })}>\n      <div className=\"section_main_cont\">\n        { visible.home && <GreenHome /> }\n        { visible.wish && <Wish /> }\n        { visible.comments && <Comment /> }\n      </div>\n      <footer>\n        <button onClick={()=> dispatch({ type: ON_GREEN_CREATOR })} title=\"Crear Post\">GreenPost</button>\n        <GreenNav\n          setVisible={setVisible}\n        />\n      </footer>\n    </div>\n  )\n};\n\nconst BtnInfo = () => {\n  const info = useSelector(state => state.greenpost.info);\n  const green = useSelector(state => state.greenpost);\n  const dispatch = useDispatch();\n  return(\n    <button\n      title={ info ? \"Ocultar\" : \"Ver\" }\n      onClick={()=> dispatch({ type: ON_GREENINFO, option: !info })}\n      className={classnames({\n        btngreen_info: true,\n        btngreen_info_rotate: info,\n      })}\n    >\n      <FontAwesomeIcon icon={faArrowCircleLeft} />\n    </button>\n  )\n}\n\nconst GreenPost = () => {\n  const green = useSelector(state => state.greenpost.current);\n  const greenCreator = useSelector(state => state.greenpost.creator);\n  const img = green.img;\n  return(\n    <div style={{ backgroundImage: `url(${img})` }} className=\"greenpost_main_cont\">\n      <Modal style={{ minWidth: '80%' }} isOpen={greenCreator}>\n        <Creator green />\n      </Modal>\n      <GreenInfo />\n      <BtnInfo />\n    </div>\n  )\n}\n\nexport default GreenPost;\n"]},"metadata":{},"sourceType":"module"}