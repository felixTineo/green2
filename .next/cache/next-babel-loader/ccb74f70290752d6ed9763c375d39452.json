{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar __jsx = React.createElement;\nimport React, { useReducer, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Popover, PopoverBody } from 'reactstrap';\nimport { ON_STORE, ON_UPDATE } from '../../store/actions';\nimport './user.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGift, faMapMarkerAlt, faDollarSign, faSchool, faMailBulk, faPhone } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\n\nconst Info = () => {\n  const {\n    name,\n    lastName,\n    perfilImg,\n    owner\n  } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  return __jsx(\"div\", {\n    className: \"user_info\"\n  }, __jsx(\"img\", {\n    src: perfilImg,\n    alt: \"\"\n  }), __jsx(\"div\", {\n    className: \"user_name\"\n  }, __jsx(\"p\", null, __jsx(\"span\", null, name), \" \", lastName), !owner && __jsx(\"button\", {\n    onClick: () => dispatch({\n      type: ON_STORE\n    }),\n    type: \"button\",\n    title: \"Enviar Regalo\"\n  }, __jsx(FontAwesomeIcon, {\n    icon: faGift\n  }))));\n};\n\nconst ExtraInfo = () => {\n  const {\n    actualCity,\n    job,\n    primaryShool,\n    mail,\n    phone,\n    owner\n  } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const {\n    0: pop,\n    1: setPop\n  } = useReducer((state, nextState) => _objectSpread({}, state, nextState), {\n    actualCity: false,\n    job: false,\n    primaryShool: false,\n    mail: false,\n    phone: false\n  });\n  const {\n    0: values,\n    1: setValues\n  } = useReducer((state, nextState) => _objectSpread({}, state, nextState), {\n    actualCity: '',\n    job: '',\n    primaryShool: '',\n    mail: '',\n    phone: ''\n  });\n  useEffect(() => {\n    setPop({\n      actualCity: false,\n      job: false,\n      primaryShool: false,\n      mail: false,\n      phone: false\n    });\n  }, [mail]);\n\n  const onPop = id => {\n    for (let key in pop) {\n      if (id === key) {\n        console.log(key);\n        setPop({\n          [key]: !pop[key]\n        });\n      } else {\n        setPop({\n          [key]: false\n        });\n      }\n    }\n  };\n\n  const onUpdate = async e => {\n    try {\n      e.preventDefault();\n      const data = {\n        key: e.target.id,\n        value: values[e.target.id]\n      };\n      await axios.post('/user/update', data);\n      dispatch({\n        type: ON_UPDATE,\n        payload: {\n          [data.key]: data.value\n        }\n      });\n      setPop({\n        [data.key]: false\n      });\n      setValues({\n        [data.key]: ''\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return __jsx(\"ul\", {\n    className: \"extrainfo_main_cont\"\n  }, __jsx(\"li\", null, __jsx(\"button\", {\n    onClick: e => onPop(e.currentTarget.id),\n    id: \"actualCity\",\n    title: owner ? \"Cambiar ubicaciÃ³n\" : null,\n    disabled: !owner\n  }, __jsx(FontAwesomeIcon, {\n    icon: faMapMarkerAlt\n  }), __jsx(\"span\", null, \" ubicacion: \"), __jsx(\"strong\", null, actualCity)), __jsx(Popover, {\n    isOpen: pop.actualCity,\n    placement: \"bottom\",\n    target: \"actualCity\"\n  }, __jsx(PopoverBody, null, __jsx(\"form\", {\n    id: \"actualCity\",\n    onSubmit: onUpdate\n  }, __jsx(\"input\", {\n    value: values.actualCity,\n    onChange: e => setValues({\n      actualCity: e.currentTarget.value\n    }),\n    type: \"text\"\n  }), __jsx(\"button\", {\n    type: \"submit\"\n  }, \"enviar\"))))), __jsx(\"li\", null, __jsx(\"button\", {\n    onClick: e => onPop(e.currentTarget.id),\n    id: \"job\",\n    title: owner ? \"Cambiar trabajo\" : null,\n    disabled: !owner\n  }, __jsx(FontAwesomeIcon, {\n    icon: faDollarSign\n  }), __jsx(\"span\", null, \" trabajo: \"), __jsx(\"strong\", null, job || 'la psiencia')), __jsx(Popover, {\n    isOpen: pop.job,\n    placement: \"bottom\",\n    target: \"job\"\n  }, __jsx(PopoverBody, null, __jsx(\"form\", {\n    id: \"job\",\n    onSubmit: onUpdate\n  }, __jsx(\"input\", {\n    value: values.job,\n    onChange: e => setValues({\n      job: e.currentTarget.value\n    }),\n    type: \"text\"\n  }), __jsx(\"button\", {\n    type: \"submit\"\n  }, \"enviar\"))))), __jsx(\"li\", null, __jsx(\"button\", {\n    onClick: e => onPop(e.currentTarget.id),\n    id: \"primaryShool\",\n    title: owner ? \"Cambiar escuela\" : null,\n    disabled: !owner\n  }, __jsx(FontAwesomeIcon, {\n    icon: faSchool\n  }), __jsx(\"span\", null, \" escuela: \"), __jsx(\"strong\", null, primaryShool || 'De la vida')), __jsx(Popover, {\n    isOpen: pop.primaryShool,\n    placement: \"bottom\",\n    target: \"primaryShool\"\n  }, __jsx(PopoverBody, null, __jsx(\"form\", {\n    id: \"primaryShool\",\n    onSubmit: onUpdate\n  }, __jsx(\"input\", {\n    value: values.primaryShool,\n    onChange: e => setValues({\n      primaryShool: e.currentTarget.value\n    }),\n    type: \"text\"\n  }), __jsx(\"button\", {\n    type: \"submit\"\n  }, \"enviar\"))))), __jsx(\"li\", null, __jsx(\"button\", {\n    onClick: e => onPop(e.currentTarget.id),\n    id: \"mail\",\n    title: owner ? \"Cambiar mail\" : null,\n    disabled: true\n  }, __jsx(FontAwesomeIcon, {\n    icon: faMailBulk\n  }), __jsx(\"span\", null, \" mail: \"), __jsx(\"strong\", null, mail)), __jsx(Popover, {\n    isOpen: pop.mail,\n    placement: \"bottom\",\n    target: \"mail\"\n  }, __jsx(PopoverBody, null, __jsx(\"form\", {\n    id: \"mail\",\n    onSubmit: onUpdate\n  }, __jsx(\"input\", {\n    value: values.mail,\n    onChange: e => setValues({\n      mail: e.currentTarget.value\n    }),\n    type: \"text\"\n  }), __jsx(\"button\", {\n    type: \"submit\"\n  }, \"enviar\"))))), __jsx(\"li\", null, __jsx(\"button\", {\n    onClick: e => onPop(e.currentTarget.id),\n    id: \"phone\",\n    title: owner ? \"Cambiar telefono\" : null,\n    disabled: !owner\n  }, __jsx(FontAwesomeIcon, {\n    icon: faPhone\n  }), __jsx(\"span\", null, \" telef\\xF3no: \"), __jsx(\"strong\", null, phone || '555-55-55-55')), __jsx(Popover, {\n    isOpen: pop.phone,\n    placement: \"bottom\",\n    target: \"phone\"\n  }, __jsx(PopoverBody, null, __jsx(\"form\", {\n    id: \"phone\",\n    onSubmit: onUpdate\n  }, __jsx(\"input\", {\n    value: values.phone,\n    onChange: e => setValues({\n      phone: e.currentTarget.value\n    }),\n    type: \"text\"\n  }), __jsx(\"button\", {\n    type: \"submit\"\n  }, \"enviar\"))))));\n};\n\nconst User = () => {\n  const user = useSelector(state => state.user);\n  return __jsx(\"div\", {\n    className: \"user_main_cont\"\n  }, __jsx(\"div\", {\n    id: \"user_space\",\n    className: \"shadow-sm rounded\"\n  }, __jsx(Info, null), __jsx(ExtraInfo, null)), __jsx(\"svg\", {\n    id: \"arrow_right\",\n    className: \"arrow_user d-none d-md-block\",\n    viewBox: \"0 0 45 70\",\n    width: \"45\",\n    height: \"70\"\n  }, __jsx(\"polyline\", {\n    strokeWidth: \"2px\",\n    stroke: \"#8bb940\",\n    fill: \"transparent\",\n    points: \"5,0 20,35 5,70\"\n  })));\n};\n\nexport default User;","map":null,"metadata":{},"sourceType":"module"}