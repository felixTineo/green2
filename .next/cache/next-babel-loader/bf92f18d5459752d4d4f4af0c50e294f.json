{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport router, { useRouter } from 'next/router';\nimport Layout from '../components/layout/layout';\nimport GreenPost from '../components/greenpost/greenpost';\nimport { useDispatch } from 'react-redux';\nimport { ON_USER, ON_LOGIN, ON_GREENINFO, ON_POST_REGISTER, ON_LOADER, ON_GREENPOST } from '../store/actions';\nimport Space from '../components/space/space';\n\nconst Perfil = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const user = router.query;\n  useEffect(() => {\n    /*if(typeof(user.posts) === 'string') user.posts = JSON.parse(user.posts);\n    if(typeof(user.greenPost) === 'string') user.greenPost = JSON.parse(user.greenPost);\n    if(typeof(user.friends) === 'string') user.friends = JSON.parse(user.friends);\n    if(typeof(user.firstTime) === 'string') user.firstTime = JSON.parse(user.firstTime);\n    if(typeof(user.owner) === 'string') user.owner = JSON.parse(user.owner);*/\n    if (user.firstTime && user.owner) dispatch({\n      type: ON_POST_REGISTER\n    }); //dispatch({ type: ON_LOADER, loader: 0 });\n\n    dispatch({\n      type: ON_USER,\n      user\n    });\n    dispatch({\n      type: ON_LOGIN,\n      option: true\n    });\n    dispatch({\n      type: ON_GREENPOST,\n      greenpost: user.greenPost[0]\n    });\n    dispatch({\n      type: ON_GREENINFO,\n      option: true\n    });\n  }, [router.query]);\n  return __jsx(Layout, null, __jsx(GreenPost, null), __jsx(Space, null));\n};\n\nexport default Perfil;","map":{"version":3,"sources":["/home/felix/Documentos/projects/greenlink/pages/perfil.jsx"],"names":["React","useEffect","router","useRouter","Layout","GreenPost","useDispatch","ON_USER","ON_LOGIN","ON_GREENINFO","ON_POST_REGISTER","ON_LOADER","ON_GREENPOST","Space","Perfil","dispatch","user","query","firstTime","owner","type","option","greenpost","greenPost"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,aAAlC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,YAA5B,EAA0CC,gBAA1C,EAA4DC,SAA5D,EAAuEC,YAAvE,QAA2F,kBAA3F;AACA,OAAOC,KAAP,MAAkB,2BAAlB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMZ,MAAM,GAAGC,SAAS,EAAxB;AACA,QAAMY,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,IAAI,GAAGd,MAAM,CAACe,KAApB;AACAhB,EAAAA,SAAS,CAAC,MAAK;AACb;;;;;AAKA,QAAGe,IAAI,CAACE,SAAL,IAAkBF,IAAI,CAACG,KAA1B,EAAiCJ,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEV;AAAR,KAAD,CAAR,CANpB,CAOb;;AACAK,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEb,OAAR;AAAiBS,MAAAA;AAAjB,KAAD,CAAR;AACAD,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEZ,QAAR;AAAkBa,MAAAA,MAAM,EAAE;AAA1B,KAAD,CAAR;AACAN,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAER,YAAR;AAAsBU,MAAAA,SAAS,EAAEN,IAAI,CAACO,SAAL,CAAe,CAAf;AAAjC,KAAD,CAAR;AACAR,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEX,YAAR;AAAsBY,MAAAA,MAAM,EAAE;AAA9B,KAAD,CAAR;AACD,GAZQ,EAYN,CAACnB,MAAM,CAACe,KAAR,CAZM,CAAT;AAcA,SACE,MAAC,MAAD,QACE,MAAC,SAAD,OADF,EAEE,MAAC,KAAD,OAFF,CADF;AAMD,CAxBD;;AA0BA,eAAeH,MAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport router, { useRouter } from 'next/router';\nimport Layout from '../components/layout/layout';\nimport GreenPost from '../components/greenpost/greenpost';\nimport { useDispatch } from 'react-redux';\nimport { ON_USER, ON_LOGIN, ON_GREENINFO, ON_POST_REGISTER, ON_LOADER, ON_GREENPOST } from '../store/actions';\nimport Space from '../components/space/space';\n\nconst Perfil = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const user = router.query;\n  useEffect(()=> {\n    /*if(typeof(user.posts) === 'string') user.posts = JSON.parse(user.posts);\n    if(typeof(user.greenPost) === 'string') user.greenPost = JSON.parse(user.greenPost);\n    if(typeof(user.friends) === 'string') user.friends = JSON.parse(user.friends);\n    if(typeof(user.firstTime) === 'string') user.firstTime = JSON.parse(user.firstTime);\n    if(typeof(user.owner) === 'string') user.owner = JSON.parse(user.owner);*/\n    if(user.firstTime && user.owner) dispatch({ type: ON_POST_REGISTER });\n    //dispatch({ type: ON_LOADER, loader: 0 });\n    dispatch({ type: ON_USER, user });\n    dispatch({ type: ON_LOGIN, option: true });\n    dispatch({ type: ON_GREENPOST, greenpost: user.greenPost[0] });\n    dispatch({ type: ON_GREENINFO, option: true });\n  }, [router.query]);\n\n  return(\n    <Layout>\n      <GreenPost />\n      <Space />\n    </Layout>\n  );\n};\n\nexport default Perfil;\n"]},"metadata":{},"sourceType":"module"}