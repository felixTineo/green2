{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport router, { useRouter } from 'next/router';\nimport Layout from '../components/layout/layout';\nimport GreenPost from '../components/greenpost/greenpost';\nimport { useDispatch } from 'react-redux';\nimport { ON_USER, ON_LOGIN, ON_GREENINFO, ON_POST_REGISTER, ON_LOADER, ON_GREENPOST } from '../store/actions';\nimport Space from '../components/space/space';\n\nvar Perfil = function Perfil() {\n  var router = useRouter();\n  var dispatch = useDispatch();\n  var user = router.query;\n  useEffect(function () {\n    if (typeof user.posts === 'string') user.posts = JSON.parse(user.posts);\n    if (typeof user.greenPost === 'string') user.greenPost = JSON.parse(user.greenPost);\n    if (typeof user.friends === 'string') user.friends = JSON.parse(user.friends);\n    if (typeof user.firstTime === 'string') user.firstTime = JSON.parse(user.firstTime);\n    if (typeof user.owner === 'string') user.owner = JSON.parse(user.owner); //if(user.firstTime && user.owner) dispatch({ type: ON_POST_REGISTER });\n\n    dispatch({\n      type: ON_LOADER,\n      loader: 0\n    });\n    dispatch({\n      type: ON_USER,\n      user: user\n    });\n    dispatch({\n      type: ON_LOGIN,\n      option: true\n    });\n    dispatch({\n      type: ON_GREENPOST,\n      greenpost: user.greenPost[0]\n    });\n    dispatch({\n      type: ON_GREENINFO,\n      option: true\n    });\n  }, [router.query]);\n  return __jsx(Layout, null, __jsx(GreenPost, null), __jsx(Space, null));\n};\n\nexport default Perfil;","map":{"version":3,"sources":["/home/felix/Documentos/projects/greenlink/pages/perfil.jsx"],"names":["React","useEffect","router","useRouter","Layout","GreenPost","useDispatch","ON_USER","ON_LOGIN","ON_GREENINFO","ON_POST_REGISTER","ON_LOADER","ON_GREENPOST","Space","Perfil","dispatch","user","query","posts","JSON","parse","greenPost","friends","firstTime","owner","type","loader","option","greenpost"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,aAAlC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,YAA5B,EAA0CC,gBAA1C,EAA4DC,SAA5D,EAAuEC,YAAvE,QAA2F,kBAA3F;AACA,OAAOC,KAAP,MAAkB,2BAAlB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,MAAMZ,MAAM,GAAGC,SAAS,EAAxB;AACA,MAAMY,QAAQ,GAAGT,WAAW,EAA5B;AACA,MAAMU,IAAI,GAAGd,MAAM,CAACe,KAApB;AACAhB,EAAAA,SAAS,CAAC,YAAK;AACb,QAAG,OAAOe,IAAI,CAACE,KAAZ,KAAuB,QAA1B,EAAoCF,IAAI,CAACE,KAAL,GAAaC,IAAI,CAACC,KAAL,CAAWJ,IAAI,CAACE,KAAhB,CAAb;AACpC,QAAG,OAAOF,IAAI,CAACK,SAAZ,KAA2B,QAA9B,EAAwCL,IAAI,CAACK,SAAL,GAAiBF,IAAI,CAACC,KAAL,CAAWJ,IAAI,CAACK,SAAhB,CAAjB;AACxC,QAAG,OAAOL,IAAI,CAACM,OAAZ,KAAyB,QAA5B,EAAsCN,IAAI,CAACM,OAAL,GAAeH,IAAI,CAACC,KAAL,CAAWJ,IAAI,CAACM,OAAhB,CAAf;AACtC,QAAG,OAAON,IAAI,CAACO,SAAZ,KAA2B,QAA9B,EAAwCP,IAAI,CAACO,SAAL,GAAiBJ,IAAI,CAACC,KAAL,CAAWJ,IAAI,CAACO,SAAhB,CAAjB;AACxC,QAAG,OAAOP,IAAI,CAACQ,KAAZ,KAAuB,QAA1B,EAAoCR,IAAI,CAACQ,KAAL,GAAaL,IAAI,CAACC,KAAL,CAAWJ,IAAI,CAACQ,KAAhB,CAAb,CALvB,CAMb;;AACAT,IAAAA,QAAQ,CAAC;AAAEU,MAAAA,IAAI,EAAEd,SAAR;AAAmBe,MAAAA,MAAM,EAAE;AAA3B,KAAD,CAAR;AACAX,IAAAA,QAAQ,CAAC;AAAEU,MAAAA,IAAI,EAAElB,OAAR;AAAiBS,MAAAA,IAAI,EAAJA;AAAjB,KAAD,CAAR;AACAD,IAAAA,QAAQ,CAAC;AAAEU,MAAAA,IAAI,EAAEjB,QAAR;AAAkBmB,MAAAA,MAAM,EAAE;AAA1B,KAAD,CAAR;AACAZ,IAAAA,QAAQ,CAAC;AAAEU,MAAAA,IAAI,EAAEb,YAAR;AAAsBgB,MAAAA,SAAS,EAAEZ,IAAI,CAACK,SAAL,CAAe,CAAf;AAAjC,KAAD,CAAR;AACAN,IAAAA,QAAQ,CAAC;AAAEU,MAAAA,IAAI,EAAEhB,YAAR;AAAsBkB,MAAAA,MAAM,EAAE;AAA9B,KAAD,CAAR;AACD,GAZQ,EAYN,CAACzB,MAAM,CAACe,KAAR,CAZM,CAAT;AAcA,SACE,MAAC,MAAD,QACE,MAAC,SAAD,OADF,EAEE,MAAC,KAAD,OAFF,CADF;AAMD,CAxBD;;AA0BA,eAAeH,MAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport router, { useRouter } from 'next/router';\nimport Layout from '../components/layout/layout';\nimport GreenPost from '../components/greenpost/greenpost';\nimport { useDispatch } from 'react-redux';\nimport { ON_USER, ON_LOGIN, ON_GREENINFO, ON_POST_REGISTER, ON_LOADER, ON_GREENPOST } from '../store/actions';\nimport Space from '../components/space/space';\n\nconst Perfil = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const user = router.query;\n  useEffect(()=> {\n    if(typeof(user.posts) === 'string') user.posts = JSON.parse(user.posts);\n    if(typeof(user.greenPost) === 'string') user.greenPost = JSON.parse(user.greenPost);\n    if(typeof(user.friends) === 'string') user.friends = JSON.parse(user.friends);\n    if(typeof(user.firstTime) === 'string') user.firstTime = JSON.parse(user.firstTime);\n    if(typeof(user.owner) === 'string') user.owner = JSON.parse(user.owner);\n    //if(user.firstTime && user.owner) dispatch({ type: ON_POST_REGISTER });\n    dispatch({ type: ON_LOADER, loader: 0 });\n    dispatch({ type: ON_USER, user });\n    dispatch({ type: ON_LOGIN, option: true });\n    dispatch({ type: ON_GREENPOST, greenpost: user.greenPost[0] });\n    dispatch({ type: ON_GREENINFO, option: true });\n  }, [router.query]);\n\n  return(\n    <Layout>\n      <GreenPost />\n      <Space />\n    </Layout>\n  );\n};\n\nexport default Perfil;\n"]},"metadata":{},"sourceType":"module"}