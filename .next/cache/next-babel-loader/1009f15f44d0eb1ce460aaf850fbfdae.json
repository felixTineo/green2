{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { combineReducers } from 'redux';\nimport { ON_DOWN, ON_VIEW_NAV, navView, ON_NOTE, ON_NOTIFICATIONS, ON_LOADER, ON_LOGIN, ON_USER, ON_GREENINFO, ON_GREEN_CREATOR, ON_STORE, storeSections, ON_PRODUCTS, ON_POST_REGISTER } from './actions';\nexport var initialState = {\n  nav: {\n    loader: 0,\n    login: false,\n    down: false,\n    wallet: 0,\n    notifications: {\n      id: '',\n      notes: {\n        view: false,\n        items: []\n      },\n      gifts: {\n        view: false,\n        items: []\n      },\n      friendReq: {\n        view: false,\n        items: []\n      }\n    }\n  },\n  user: {\n    id: '',\n    owner: false,\n    mail: '',\n    pass: '',\n    name: '',\n    lastName: '',\n    birthday: '',\n    greenPost: {\n      likes: [],\n      comments: [],\n      wish: {}\n    },\n    perfilImg: '',\n    originCity: '',\n    actualCity: '',\n    primaryShool: '',\n    secondarySchoool: '',\n    university: '',\n    job: '',\n    posts: [{\n      green: true,\n      img: '',\n      date: '',\n      author: '',\n      _id: '',\n      history: '',\n      comments: [],\n      likes: [],\n      wish: {\n        id: '123456789',\n        name: 'Oreo',\n        img: '/static/store/products/gol-1.jpg',\n        tag: 'gol',\n        price: 100,\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Necessitatibus, cumque atque, dolore qui, tempora delectus provident saepe dicta minus iusto iste autem? Aut, ipsum. Ipsam illo perspiciatis optio architecto cumque!'\n      }\n    }],\n    interest: [],\n    events: [],\n    friends: []\n  },\n  greenpost: {\n    info: false,\n    creator: false\n  },\n  store: {\n    visible: false,\n    current: {},\n    home: false,\n    product: false,\n    music: true,\n    ebook: false,\n    toy: false,\n    tv: false,\n    jewel: false,\n    candy: false,\n    items: []\n  },\n  postregister: false\n};\n\nvar nav = function nav() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.nav;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ON_DOWN:\n      return _Object$assign({}, state, {\n        down: action.option\n      });\n\n    case ON_NOTIFICATIONS:\n      return _Object$assign({}, state, {\n        notifications: action.notifications\n      });\n\n    case ON_LOADER:\n      return _Object$assign({}, state, {\n        loader: action.loader\n      });\n\n    case ON_LOGIN:\n      return _Object$assign({}, state, {\n        login: action.option\n      });\n\n    case ON_VIEW_NAV:\n      if (action.note === navView.GIFT) {\n        return _Object$assign({}, state, {\n          notifications: _Object$assign({}, state.notifications, {\n            gifts: _Object$assign({}, state.notifications.gifts, {\n              view: true\n            })\n          })\n        });\n      }\n\n      if (action.note === navView.NOTES) {\n        return _Object$assign({}, state, {\n          notifications: _Object$assign({}, state.notifications, {\n            notes: _Object$assign({}, state.notifications.notes, {\n              view: true\n            })\n          })\n        });\n      }\n\n      if (action.note === navView.FRIEND) {\n        return _Object$assign({}, state, {\n          notifications: _Object$assign({}, state.notifications, {\n            friendReq: _Object$assign({}, state.notifications.friendReq, {\n              view: true\n            })\n          })\n        });\n      }\n\n    case ON_NOTE:\n      if (action.payload.note === navView.GIFT) {\n        return _Object$assign({}, state, {\n          notifications: _Object$assign({}, state.notifications, {\n            gifts: _Object$assign({}, state.notifications.gifts, {\n              view: false,\n              items: action.payload.items\n            })\n          })\n        });\n      }\n\n      if (action.payload.note === navView.NOTES) {\n        return _Object$assign({}, state, {\n          notifications: _Object$assign({}, state.notifications, {\n            notes: _Object$assign({}, state.notifications.notes, {\n              view: false,\n              items: action.payload.items\n            })\n          })\n        });\n      }\n\n      if (action.payload.note === navView.FRIEND) {\n        return _Object$assign({}, state, {\n          notifications: _Object$assign({}, state.notifications, {\n            friendReq: _Object$assign({}, state.notifications.friendReq, {\n              view: false,\n              items: action.payload.items\n            })\n          })\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nvar user = function user() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.user;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ON_USER:\n      return _Object$assign({}, state, action.user);\n\n    default:\n      return state;\n  }\n};\n\nvar greenpost = function greenpost() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.greenpost;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ON_GREENINFO:\n      return _Object$assign({}, state, {\n        info: !state.info\n      });\n\n    case ON_GREEN_CREATOR:\n      return _Object$assign({}, state, {\n        creator: !state.creator\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar greenstore = function greenstore() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.store;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var HOME = storeSections.HOME,\n      PRODUCT = storeSections.PRODUCT,\n      MUSIC = storeSections.MUSIC,\n      TV = storeSections.TV,\n      EBOOK = storeSections.EBOOK,\n      CANDY = storeSections.CANDY,\n      TOY = storeSections.TOY,\n      JEWEL = storeSections.JEWEL;\n\n  switch (action.type) {\n    case ON_STORE:\n      return _Object$assign({}, state, {\n        visible: !state.visible,\n        home: true\n      });\n\n    case ON_PRODUCTS:\n      return _Object$assign({}, state, {\n        items: action.products\n      });\n\n    case PRODUCT:\n      return _Object$assign({}, state, {\n        current: action.product,\n        product: true,\n        home: false,\n        jewel: false,\n        ebook: false,\n        music: false,\n        toy: false,\n        tv: false,\n        candy: false\n      });\n\n    case HOME:\n      return _Object$assign({}, state, {\n        product: false,\n        home: true,\n        jewel: false,\n        ebook: false,\n        music: false,\n        toy: false,\n        tv: false,\n        candy: false\n      });\n\n    case MUSIC:\n      return _Object$assign({}, state, {\n        product: false,\n        home: false,\n        jewel: false,\n        ebook: false,\n        music: true,\n        toy: false,\n        tv: false,\n        candy: false\n      });\n\n    case TV:\n      return _Object$assign({}, state, {\n        product: false,\n        home: false,\n        jewel: false,\n        ebook: false,\n        music: false,\n        toy: false,\n        tv: true,\n        candy: false\n      });\n\n    case JEWEL:\n      return _Object$assign({}, state, {\n        product: false,\n        home: false,\n        jewel: true,\n        ebook: false,\n        music: false,\n        toy: false,\n        tv: false,\n        candy: false\n      });\n\n    case TOY:\n      return _Object$assign({}, state, {\n        product: false,\n        home: false,\n        jewel: false,\n        ebook: false,\n        music: false,\n        toy: true,\n        tv: false,\n        candy: false\n      });\n\n    case CANDY:\n      return _Object$assign({}, state, {\n        product: false,\n        home: false,\n        jewel: false,\n        ebook: false,\n        music: false,\n        toy: false,\n        tv: false,\n        candy: true\n      });\n\n    case EBOOK:\n      return _Object$assign({}, state, {\n        product: false,\n        home: false,\n        jewel: false,\n        ebook: true,\n        music: false,\n        toy: false,\n        tv: false,\n        candy: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar postregister = function postregister() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.postregister;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === ON_POST_REGISTER) {\n    return !state;\n  }\n\n  return state;\n};\n\nexport var store = combineReducers({\n  nav: nav,\n  user: user,\n  greenpost: greenpost,\n  greenstore: greenstore,\n  postregister: postregister\n});","map":null,"metadata":{},"sourceType":"module"}