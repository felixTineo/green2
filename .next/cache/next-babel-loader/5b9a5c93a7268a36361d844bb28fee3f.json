{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar __jsx = React.createElement;\nimport React, { useReducer, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ON_POST_REGISTER, ON_GREEN_CREATOR } from '../../store/actions';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport { Modal } from 'reactstrap';\nimport './postregister.scss';\nimport Logo from '../layout/logo';\nimport axios from 'axios';\nimport Loader from '../loader/loader';\n\nconst BtnUpload = () => {\n  return __jsx(\"div\", {\n    className: \"btnUpload_main_cont\"\n  }, __jsx(\"label\", {\n    htmlFor: \"img\"\n  }, __jsx(\"div\", {\n    className: \"img_cont\"\n  }, __jsx(\"img\", {\n    src: \"\",\n    alt: \"\"\n  }), __jsx(FontAwesomeIcon, {\n    icon: faUser\n  })), __jsx(\"input\", {\n    id: \"img\",\n    name: \"img\",\n    type: \"file\"\n  })));\n};\n\nconst Welcome = () => {\n  return __jsx(\"div\", {\n    className: \"welcome_main_cont\"\n  }, __jsx(\"h1\", null, \"Bienvenido a \", __jsx(\"span\", null, \"Greenlink!\")), __jsx(\"p\", null, \"Completa el registro agregando informacion adicional y creando tu primer \", __jsx(\"strong\", null, \"GreenPost,\"), \" de esta manera podras ser encontrado por otros usuarios ademas de recibir obsequios. Recuerda, mietras mas preciso seas mas facil sera que tus seres queridos contacten contigo.\"));\n};\n\nconst Congratulations = () => {\n  const user = useSelector(state => state.user);\n  return __jsx(\"div\", {\n    className: \"welcome_main_cont\"\n  }, __jsx(\"h1\", null, \"Felicidades \", user.name), __jsx(\"p\", null, \"No olvides crear tu primer\", __jsx(\"strong\", null, \"GreenPost,\")));\n};\n\nconst UserInfo = ({\n  values,\n  setValues,\n  onImg\n}) => {\n  const user = useSelector(state => state.user);\n  return __jsx(\"div\", {\n    className: \"user_postregister_cont\"\n  }, __jsx(\"label\", {\n    htmlFor: \"perfilImg\"\n  }, !values.perfilImgFrontEnd && __jsx(FontAwesomeIcon, {\n    icon: faUser\n  }), values.perfilImgFrontEnd && __jsx(\"img\", {\n    src: values.perfilImgFrontEnd,\n    alt: \"\"\n  }), __jsx(\"input\", {\n    onChange: onImg,\n    type: \"file\",\n    name: \"perfilImg\",\n    id: \"perfilImg\"\n  })), __jsx(\"p\", null, \"Elige una foto de perfil\"), user.name === 'Green' && __jsx(React.Fragment, null, __jsx(\"input\", {\n    value: values.name,\n    onChange: e => setValues({\n      name: e.currentTarget.value\n    }),\n    placeholder: \"Nombre\",\n    type: \"text\"\n  }), __jsx(\"input\", {\n    value: values.lastName,\n    onChange: e => setValues({\n      lastName: e.currentTarget.value\n    }),\n    placeholder: \"Apellido\",\n    type: \"text\"\n  }), __jsx(\"div\", {\n    className: \"birth_sex_main\"\n  }, __jsx(\"p\", null, \"Cumplea\\xF1os\"), __jsx(\"input\", {\n    type: \"date\",\n    value: values.birthday,\n    onChange: e => setValues({\n      birthday: e.currentTarget.value\n    })\n  }), __jsx(\"div\", {\n    className: \"birthday_sex\",\n    style: {\n      marginLeft: '1rem'\n    }\n  }, __jsx(\"p\", null, \"Sexo\"), __jsx(\"select\", {\n    onChange: e => setValues({\n      sex: e.currentTarget.value\n    }),\n    name: \"sex\",\n    id: \"sex\"\n  }, __jsx(\"option\", {\n    value: \"female\"\n  }, \"Mujer\"), __jsx(\"option\", {\n    value: \"male\"\n  }, \"Hombre\"), __jsx(\"option\", {\n    value: \"otro\"\n  }, \"Otro\"))))));\n};\n\nconst PostRegister = () => {\n  const dispatch = useDispatch();\n  const {\n    0: values,\n    1: setValues\n  } = useReducer((state, next) => _objectSpread({}, state, next), {\n    name: '',\n    lastName: '',\n    birthday: '',\n    sex: '',\n    perfilImgFrontEnd: '',\n    perfilImg: ''\n  });\n  const user = useSelector(state => state.user);\n\n  const onImg = e => {\n    const img = e.target.files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = () => {\n      if (reader.result) {\n        setValues({\n          perfilImgFrontEnd: reader.result,\n          perfilImg: img\n        });\n      } else {\n        setValues({\n          perfilImgFrontEnd: null,\n          perfilImg: null\n        });\n      }\n    };\n\n    reader.readAsDataURL(img);\n    console.log(perfilImg);\n    console.log(img);\n  };\n\n  const {\n    0: section,\n    1: setSection\n  } = useReducer((state, next) => _objectSpread({}, state, next), {\n    welcome: true,\n    info: false,\n    loader: false,\n    congratulations: false\n  });\n  const visible = useSelector(state => state.postregister);\n\n  const onSubmit = async () => {\n    try {\n      const {\n        name,\n        lastName,\n        birthday,\n        sex,\n        perfilImg\n      } = values;\n      const data = new FormData();\n      setSection({\n        info: false,\n        loader: true\n      });\n\n      if (user.name === 'Green') {\n        data.append('name', name);\n        data.append('lastName', lastName);\n        data.append('birthday', birthday);\n        data.append('sex', sex);\n      }\n\n      data.append('perfilImg', perfilImg);\n      await axios.post('/user/postregister', data);\n      setSection({\n        loader: false,\n        congratulations: true\n      });\n      setTimeout(() => {\n        dispatch({\n          type: ON_POST_REGISTER\n        });\n      }, 3000);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return __jsx(Modal, {\n    className: \"my_modal\",\n    isOpen: visible\n  }, __jsx(\"div\", {\n    className: \"postregister_main_cont\"\n  }, __jsx(\"header\", null, __jsx(Logo, {\n    dark: true,\n    url: \"/\"\n  })), __jsx(\"div\", {\n    className: \"body\"\n  }, section.welcome && __jsx(Welcome, null), section.info && __jsx(UserInfo, {\n    values: values,\n    setValues: setValues,\n    onImg: onImg\n  }), section.loader && __jsx(Loader, {\n    dark: true\n  }), section.congratulations && __jsx(Congratulations, null)), __jsx(\"footer\", null, section.welcome && __jsx(\"button\", {\n    onClick: () => setSection({\n      welcome: false,\n      info: true\n    })\n  }, \"siguiente\"), section.info && __jsx(\"button\", {\n    onClick: onSubmit\n  }, \"enviar\"))));\n};\n\nexport default PostRegister;","map":{"version":3,"sources":["/home/felix/Documentos/projects/greenlink/components/postregister/postregister.jsx"],"names":["React","useReducer","useState","useSelector","useDispatch","ON_POST_REGISTER","ON_GREEN_CREATOR","FontAwesomeIcon","faUser","Modal","Logo","axios","Loader","BtnUpload","Welcome","Congratulations","user","state","name","UserInfo","values","setValues","onImg","perfilImgFrontEnd","e","currentTarget","value","lastName","birthday","marginLeft","sex","PostRegister","dispatch","next","perfilImg","img","target","files","reader","FileReader","onloadend","result","readAsDataURL","console","log","section","setSection","welcome","info","loader","congratulations","visible","postregister","onSubmit","data","FormData","append","post","setTimeout","type","err"],"mappings":"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","sourcesContent":["import React, { useReducer, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ON_POST_REGISTER, ON_GREEN_CREATOR } from '../../store/actions';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport { Modal } from 'reactstrap';\nimport './postregister.scss';\nimport Logo from '../layout/logo';\nimport axios from 'axios';\nimport Loader from '../loader/loader';\n\n\nconst BtnUpload = () => {\n\n  return(\n    <div className=\"btnUpload_main_cont\">\n      <label htmlFor=\"img\">\n        <div className=\"img_cont\">\n          <img src=\"\" alt=\"\"/>\n          <FontAwesomeIcon icon={faUser} />\n        </div>\n        <input id=\"img\" name=\"img\" type=\"file\"/>\n      </label>\n    </div>\n  )\n};\n\nconst Welcome = () => {\n\n  return(\n    <div className=\"welcome_main_cont\">\n      <h1>Bienvenido a <span>Greenlink!</span></h1>\n      <p>Completa el registro agregando informacion adicional y creando tu primer <strong>GreenPost,</strong> de esta manera podras ser encontrado por otros usuarios ademas de recibir obsequios. Recuerda, mietras mas preciso seas mas facil sera que tus seres queridos contacten contigo.</p>\n    </div>\n  )\n};\n\nconst Congratulations = () => {\n  const user = useSelector(state => state.user);\n  return(\n    <div className=\"welcome_main_cont\">\n      <h1>Felicidades {user.name}</h1>\n      <p>No olvides crear tu primer<strong>GreenPost,</strong></p>\n    </div>\n  )\n};\n\nconst UserInfo = ({ values, setValues, onImg }) => {\n  const user = useSelector(state => state.user);\n  return(\n    <div className=\"user_postregister_cont\">\n      <label htmlFor=\"perfilImg\">\n        {\n          !values.perfilImgFrontEnd && <FontAwesomeIcon icon={faUser} />\n        }\n        {\n          values.perfilImgFrontEnd && <img src={values.perfilImgFrontEnd} alt=\"\"/>\n        }\n        <input onChange={onImg} type=\"file\" name=\"perfilImg\" id=\"perfilImg\"/>\n      </label>\n      <p>Elige una foto de perfil</p>\n      {\n        user.name === 'Green' && (\n          <>\n          <input value={values.name} onChange={(e)=> setValues({ name: e.currentTarget.value })} placeholder=\"Nombre\" type=\"text\"/>\n          <input value={values.lastName} onChange={(e)=> setValues({ lastName: e.currentTarget.value })} placeholder=\"Apellido\" type=\"text\"/>\n          <div className=\"birth_sex_main\">\n              <p>Cumpleaños</p>\n              <input\n                type=\"date\"\n                value={values.birthday}\n                onChange={(e)=> setValues({ birthday: e.currentTarget.value })}\n              />\n            <div className=\"birthday_sex\" style={{ marginLeft: '1rem' }}>\n              <p>Sexo</p>\n              <select onChange={(e)=> setValues({ sex: e.currentTarget.value })} name=\"sex\" id=\"sex\">\n                <option value=\"female\">Mujer</option>\n                <option value=\"male\">Hombre</option>\n                <option value=\"otro\">Otro</option>\n              </select>\n            </div>\n          </div>\n          </>\n        )\n      }\n    </div>\n  )\n};\n\nconst PostRegister = () =>{\nconst dispatch = useDispatch();\nconst [values, setValues] = useReducer((state, next) => ({ ...state, ...next }),{\n  name: '',\n  lastName: '',\n  birthday: '',\n  sex: '',\n  perfilImgFrontEnd:'',\n  perfilImg: '',\n});\nconst user = useSelector(state => state.user);\nconst onImg = (e) => {\n  const img = e.target.files[0];\n  const reader = new FileReader();\n  reader.onloadend = () => {\n    if(reader.result){\n      setValues({ perfilImgFrontEnd: reader.result, perfilImg: img });\n    } else {\n      setValues({ perfilImgFrontEnd: null, perfilImg: null });\n    }\n  }\n  reader.readAsDataURL(img);\n  console.log(perfilImg);\n  console.log(img);\n}\n\n  const [section, setSection] = useReducer((state, next) => ({ ...state, ...next }), {\n    welcome: true,\n    info: false,\n    loader: false,\n    congratulations: false,\n  })\n  const visible = useSelector(state => state.postregister);\n\n  const onSubmit = async() => {\n    try{\n      const { name, lastName, birthday, sex, perfilImg } = values;\n      const data = new FormData();\n      setSection({ info: false, loader: true });\n      if(user.name === 'Green'){\n        data.append('name', name);\n        data.append('lastName', lastName);\n        data.append('birthday', birthday);\n        data.append('sex', sex);\n      }\n      data.append('perfilImg', perfilImg);\n      await axios.post('/user/postregister', data);\n      setSection({ loader: false, congratulations: true });\n      setTimeout(()=> {\n        dispatch({ type: ON_POST_REGISTER });\n      }, 3000)\n    }catch(err){\n      console.log(err);\n    }\n  }\n\n  return(\n    <Modal className=\"my_modal\" isOpen={visible}>\n      <div className=\"postregister_main_cont\">\n        <header><Logo dark url=\"/\"/></header>\n        <div className=\"body\">\n          {\n            section.welcome && <Welcome />\n          }\n          {\n            section.info && <UserInfo values={values} setValues={setValues} onImg={onImg} />\n          }\n          {\n            section.loader && <Loader dark />\n          }\n          {\n            section.congratulations && <Congratulations />\n          }\n        </div>\n        <footer>\n          {\n            section.welcome && <button onClick={()=> setSection({ welcome: false, info: true })}>siguiente</button>\n          }\n          {\n            section.info && <button onClick={onSubmit}>enviar</button>\n          }\n        </footer>\n      </div>\n    </Modal>\n  )\n}\n\nexport default PostRegister;\n"]},"metadata":{},"sourceType":"module"}