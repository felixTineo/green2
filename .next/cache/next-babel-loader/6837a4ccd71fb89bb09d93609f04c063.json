{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { combineReducers } from 'redux';\nimport { ON_DOWN, ON_VIEW_NAV, navView, ON_NOTE, ON_NOTIFICATIONS, ON_LOADER, ON_LOGIN, ON_USER, ON_GIFT, ON_GREENINFO, ON_GREENPOST, ON_GREEN_CREATOR, ON_GREEN_LIKE, OFF_GREEN_LIKE, ON_GREEN_WISH_FOUND, ON_GREEN_COMMENT, ON_STORE, storeSections, ON_PRODUCTS, ON_POST_REGISTER, ON_WALLET, ON_UPDATE, ON_FLOAT, OFF_FLOAT, ON_VAULT, ON_VAULT_HOME, ON_VAULT_PRODUCT, ON_SPACE_HOME, ON_SPACE_WALL, ON_SPACE_CHAT, ON_SPACE_FRIENDS, ON_SPACE_EVENTS, spaceSections, ON_WALL_TOP, ON_WALL_POSTS } from './actions';\nexport const initialState = {\n  nav: {\n    loader: 0,\n    login: false,\n    down: false,\n    wallet: 0,\n    notifications: {\n      id: '',\n      wallet: 0,\n      notes: {\n        view: false,\n        items: []\n      },\n      gifts: {\n        view: false,\n        items: []\n      },\n      friendReq: {\n        view: false,\n        items: []\n      }\n    }\n  },\n  user: {\n    id: '',\n    owner: false,\n    mail: '',\n    pass: '',\n    name: '',\n    lastName: '',\n    birthday: '',\n    greenPost: [{\n      _id: ''\n    }],\n    perfilImg: '',\n    originCity: '',\n    actualCity: '',\n    primaryShool: '',\n    secondarySchoool: '',\n    university: '',\n    job: '',\n    posts: [{\n      green: true,\n      img: '',\n      date: '',\n      author: '',\n      _id: '',\n      history: '',\n      comments: [],\n      likes: [],\n      wish: {\n        id: '123456789',\n        name: 'Oreo',\n        img: '/static/store/products/gol-1.jpg',\n        tag: 'gol',\n        price: 100,\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Necessitatibus, cumque atque, dolore qui, tempora delectus provident saepe dicta minus iusto iste autem? Aut, ipsum. Ipsam illo perspiciatis optio architecto cumque!'\n      }\n    }],\n    interest: [],\n    events: [],\n    friends: []\n  },\n  greenpost: {\n    _id: '',\n    info: false,\n    creator: false,\n    current: {\n      likes: [],\n      comments: [],\n      wish: {}\n    }\n  },\n  store: {\n    visible: false,\n    current: {},\n    home: false,\n    product: false,\n    music: false,\n    ebook: false,\n    toy: false,\n    tv: false,\n    jewel: false,\n    candy: false,\n    items: []\n  },\n  vault: {\n    visible: false,\n    home: true,\n    product: false,\n    current: {},\n    items: []\n  },\n  postregister: false,\n  floatingnotes: [],\n  space: {\n    home: true,\n    wall: false,\n    chat: false,\n    friends: false,\n    envents: false\n  },\n  wall: {\n    top: [],\n    posts: []\n  }\n};\n\nconst nav = (state = initialState.nav, action) => {\n  switch (action.type) {\n    case ON_DOWN:\n      return _Object$assign({}, state, {\n        down: action.option\n      });\n\n    case ON_NOTIFICATIONS:\n      return _Object$assign({}, state, {\n        notifications: action.notifications\n      });\n\n    case ON_LOADER:\n      return _Object$assign({}, state, {\n        loader: action.loader\n      });\n\n    case ON_LOGIN:\n      return _Object$assign({}, state, {\n        login: action.option\n      });\n\n    case ON_WALLET:\n      return _Object$assign({}, state, {\n        notifications: _Object$assign({}, state.notifications, {\n          wallet: state.notifications.wallet + action.coin\n        })\n      });\n\n    case ON_VIEW_NAV:\n      if (action.note === navView.GIFT) {\n        return _Object$assign({}, state, {\n          notifications: _Object$assign({}, state.notifications, {\n            gifts: _Object$assign({}, state.notifications.gifts, {\n              view: true\n            })\n          })\n        });\n      }\n\n      if (action.note === navView.NOTES) {\n        return _Object$assign({}, state, {\n          notifications: _Object$assign({}, state.notifications, {\n            notes: _Object$assign({}, state.notifications.notes, {\n              view: true\n            })\n          })\n        });\n      }\n\n      if (action.note === navView.FRIEND) {\n        return _Object$assign({}, state, {\n          notifications: _Object$assign({}, state.notifications, {\n            friendReq: _Object$assign({}, state.notifications.friendReq, {\n              view: true\n            })\n          })\n        });\n      }\n\n    case ON_NOTE:\n      const {\n        gifts,\n        notes,\n        friendReq\n      } = state.notifications;\n\n      if (action.payload.note === navView.GIFT) {\n        return _Object$assign({}, state, {\n          notifications: _Object$assign({}, state.notifications, {\n            gifts: _Object$assign({}, state.notifications.gifts, {\n              view: false,\n              items: [action.payload.user, ...gifts.items]\n            })\n          })\n        });\n      }\n\n      if (action.payload.note === navView.NOTES) {\n        return _Object$assign({}, state, {\n          notifications: _Object$assign({}, state.notifications, {\n            notes: _Object$assign({}, state.notifications.notes, {\n              view: false,\n              items: [action.payload.user, ...notes.items]\n            })\n          })\n        });\n      }\n\n      if (action.payload.note === navView.FRIEND) {\n        return _Object$assign({}, state, {\n          notifications: _Object$assign({}, state.notifications, {\n            friendReq: _Object$assign({}, state.notifications.friendReq, {\n              view: false,\n              items: [action.payload.user, ...friendReq.items]\n            })\n          })\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst user = (state = initialState.user, action) => {\n  switch (action.type) {\n    case ON_USER:\n      return _Object$assign({}, state, action.user);\n\n    case ON_UPDATE:\n      return _Object$assign({}, state, _objectSpread({}, action.payload));\n\n    default:\n      return state;\n  }\n};\n\nconst greenpost = (state = initialState.greenpost, action) => {\n  switch (action.type) {\n    case ON_GREENINFO:\n      return _Object$assign({}, state, {\n        info: action.option\n      });\n\n    case ON_GREEN_CREATOR:\n      return _Object$assign({}, state, {\n        creator: !state.creator\n      });\n\n    case ON_GREENPOST:\n      return _Object$assign({}, state, {\n        current: action.greenpost\n      });\n\n    case ON_GREEN_LIKE:\n      return _Object$assign({}, state, {\n        current: _Object$assign({}, state.current, {\n          likes: [action.like, ...state.current.likes]\n        })\n      });\n\n    case OFF_GREEN_LIKE:\n      const nextState = state.current.likes.filter(like => like._id !== action.uid);\n      return _Object$assign({}, state, {\n        current: _Object$assign({}, state.current, {\n          likes: nextState\n        })\n      });\n\n    case ON_GREEN_WISH_FOUND:\n      return _Object$assign({}, state, {\n        current: _Object$assign({}, state.current, {\n          wish: _Object$assign({}, state.current.wish, {\n            found: state.current.wish.found + action.found\n          })\n        })\n      });\n\n    case ON_GREEN_COMMENT:\n      return _Object$assign({}, state, {\n        current: _Object$assign({}, state.current, {\n          comments: [...state.current.comments, action.comment]\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst greenstore = (state = initialState.store, action) => {\n  const {\n    HOME,\n    PRODUCT,\n    MUSIC,\n    TV,\n    EBOOK,\n    CANDY,\n    TOY,\n    JEWEL\n  } = storeSections;\n\n  switch (action.type) {\n    case ON_STORE:\n      return _Object$assign({}, state, {\n        visible: !state.visible,\n        home: true\n      });\n\n    case ON_PRODUCTS:\n      return _Object$assign({}, state, {\n        items: action.products\n      });\n\n    case PRODUCT:\n      return _Object$assign({}, state, {\n        current: action.product,\n        product: true,\n        home: false,\n        jewel: false,\n        ebook: false,\n        music: false,\n        toy: false,\n        tv: false,\n        candy: false\n      });\n\n    case HOME:\n      return _Object$assign({}, state, {\n        product: false,\n        home: true,\n        jewel: false,\n        ebook: false,\n        music: false,\n        toy: false,\n        tv: false,\n        candy: false\n      });\n\n    case MUSIC:\n      return _Object$assign({}, state, {\n        product: false,\n        home: false,\n        jewel: false,\n        ebook: false,\n        music: true,\n        toy: false,\n        tv: false,\n        candy: false\n      });\n\n    case TV:\n      return _Object$assign({}, state, {\n        product: false,\n        home: false,\n        jewel: false,\n        ebook: false,\n        music: false,\n        toy: false,\n        tv: true,\n        candy: false\n      });\n\n    case JEWEL:\n      return _Object$assign({}, state, {\n        product: false,\n        home: false,\n        jewel: true,\n        ebook: false,\n        music: false,\n        toy: false,\n        tv: false,\n        candy: false\n      });\n\n    case TOY:\n      return _Object$assign({}, state, {\n        product: false,\n        home: false,\n        jewel: false,\n        ebook: false,\n        music: false,\n        toy: true,\n        tv: false,\n        candy: false\n      });\n\n    case CANDY:\n      return _Object$assign({}, state, {\n        product: false,\n        home: false,\n        jewel: false,\n        ebook: false,\n        music: false,\n        toy: false,\n        tv: false,\n        candy: true\n      });\n\n    case EBOOK:\n      return _Object$assign({}, state, {\n        product: false,\n        home: false,\n        jewel: false,\n        ebook: true,\n        music: false,\n        toy: false,\n        tv: false,\n        candy: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst postregister = (state = initialState.postregister, action) => {\n  if (action.type === ON_POST_REGISTER) {\n    return !state;\n  }\n\n  return state;\n};\n\nconst floatingnotes = (state = initialState.floatingnotes, action) => {\n  if (action.type === ON_FLOAT) {\n    return [...state, action.payload];\n  }\n\n  if (action.type === OFF_FLOAT) {\n    const nextState = state.filter(note => note.id !== action.id);\n    return nextState;\n  }\n\n  return state;\n};\n\nconst vault = (state = initialState.vault, action) => {\n  switch (action.type) {\n    case ON_VAULT:\n      return _Object$assign({}, state, {\n        visible: !state.visible\n      });\n\n    case ON_VAULT_HOME:\n      return _Object$assign({}, state, {\n        home: true,\n        product: false\n      });\n\n    case ON_VAULT_PRODUCT:\n      return _Object$assign({}, state, {\n        home: false,\n        product: true,\n        current: action.product\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst space = (state = initialState.space, action) => {\n  switch (action.type) {\n    case ON_SPACE_HOME:\n      return _Object$assign({}, state, {\n        home: true,\n        wall: false,\n        chat: false,\n        friends: false,\n        events: false\n      });\n\n    case ON_SPACE_WALL:\n      return _Object$assign({}, state, {\n        home: false,\n        wall: true,\n        chat: false,\n        friends: false,\n        events: false\n      });\n\n    case ON_SPACE_CHAT:\n      return _Object$assign({}, state, {\n        home: false,\n        wall: false,\n        chat: true,\n        friends: false,\n        events: false\n      });\n\n    case ON_SPACE_FRIENDS:\n      return _Object$assign({}, state, {\n        home: false,\n        wall: false,\n        chat: false,\n        friends: true,\n        events: false\n      });\n\n    case ON_SPACE_EVENTS:\n      return _Object$assign({}, state, {\n        home: false,\n        wall: false,\n        chat: false,\n        friends: false,\n        events: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst wall = (state = initialState.wall, action) => {\n  switch (action.type) {\n    case ON_WALL_TOP:\n      return _Object$assign({}, state, {\n        top: action.posts\n      });\n\n    case ON_WALL_POSTS:\n      return _Object$assign({}, state, {\n        posts: action.posts\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const store = combineReducers({\n  nav,\n  user,\n  greenpost,\n  greenstore,\n  postregister,\n  floatingnotes,\n  vault,\n  space,\n  wall\n});","map":{"version":3,"sources":["/home/felix/Documentos/projects/greenlink/store/reducers.js"],"names":["combineReducers","ON_DOWN","ON_VIEW_NAV","navView","ON_NOTE","ON_NOTIFICATIONS","ON_LOADER","ON_LOGIN","ON_USER","ON_GIFT","ON_GREENINFO","ON_GREENPOST","ON_GREEN_CREATOR","ON_GREEN_LIKE","OFF_GREEN_LIKE","ON_GREEN_WISH_FOUND","ON_GREEN_COMMENT","ON_STORE","storeSections","ON_PRODUCTS","ON_POST_REGISTER","ON_WALLET","ON_UPDATE","ON_FLOAT","OFF_FLOAT","ON_VAULT","ON_VAULT_HOME","ON_VAULT_PRODUCT","ON_SPACE_HOME","ON_SPACE_WALL","ON_SPACE_CHAT","ON_SPACE_FRIENDS","ON_SPACE_EVENTS","spaceSections","ON_WALL_TOP","ON_WALL_POSTS","initialState","nav","loader","login","down","wallet","notifications","id","notes","view","items","gifts","friendReq","user","owner","mail","pass","name","lastName","birthday","greenPost","_id","perfilImg","originCity","actualCity","primaryShool","secondarySchoool","university","job","posts","green","img","date","author","history","comments","likes","wish","tag","price","description","interest","events","friends","greenpost","info","creator","current","store","visible","home","product","music","ebook","toy","tv","jewel","candy","vault","postregister","floatingnotes","space","wall","chat","envents","top","state","action","type","option","coin","note","GIFT","NOTES","FRIEND","payload","like","nextState","filter","uid","found","comment","greenstore","HOME","PRODUCT","MUSIC","TV","EBOOK","CANDY","TOY","JEWEL","products"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\nimport {\n  ON_DOWN, ON_VIEW_NAV,\n  navView,\n  ON_NOTE,\n  ON_NOTIFICATIONS,\n  ON_LOADER,\n  ON_LOGIN,\n  ON_USER,\n  ON_GIFT,\n  ON_GREENINFO,\n  ON_GREENPOST,\n  ON_GREEN_CREATOR,\n  ON_GREEN_LIKE,\n  OFF_GREEN_LIKE,\n  ON_GREEN_WISH_FOUND,\n  ON_GREEN_COMMENT,\n  ON_STORE,\n  storeSections,\n  ON_PRODUCTS,\n  ON_POST_REGISTER,\n  ON_WALLET,\n  ON_UPDATE,\n  ON_FLOAT,\n  OFF_FLOAT,\n  ON_VAULT,\n  ON_VAULT_HOME,\n  ON_VAULT_PRODUCT,\n  ON_SPACE_HOME,\n  ON_SPACE_WALL,\n  ON_SPACE_CHAT,\n  ON_SPACE_FRIENDS,\n  ON_SPACE_EVENTS,\n  spaceSections,\n  ON_WALL_TOP,\n  ON_WALL_POSTS,\n} from './actions';\n\nexport const initialState = {\n  nav:{\n    loader:0,\n    login: false,\n    down: false,\n    wallet: 0,\n    notifications: {\n      id: '',\n      wallet: 0,\n      notes: {\n        view: false,\n        items: [],\n      },\n      gifts: {\n        view: false,\n        items: [],\n      },\n      friendReq:{\n        view: false,\n        items: [],\n      },\n    },\n  },\n  user:{\n    id: '',\n    owner: false,\n    mail: '',\n    pass: '',\n    name: '',\n    lastName: '',\n    birthday: '',\n    greenPost: [{\n      _id:'',\n    }],\n    perfilImg: '',\n    originCity: '',\n    actualCity: '',\n    primaryShool: '',\n    secondarySchoool: '',\n    university: '',\n    job: '',\n    posts: [{\n      green:true,\n      img: '',\n      date: '',\n      author: '',\n      _id: '',\n      history: '',\n      comments: [],\n      likes: [],\n      wish:{\n        id: '123456789',\n        name: 'Oreo',\n        img: '/static/store/products/gol-1.jpg',\n        tag: 'gol', price: 100,\n        description:'Lorem ipsum dolor sit amet consectetur adipisicing elit. Necessitatibus, cumque atque, dolore qui, tempora delectus provident saepe dicta minus iusto iste autem? Aut, ipsum. Ipsam illo perspiciatis optio architecto cumque!'\n      }\n    }],\n    interest: [],\n    events: [],\n    friends: [],\n  },\n  greenpost:{\n    _id: '',\n    info: false,\n    creator: false,\n    current:{\n      likes:[],\n      comments: [],\n      wish: {},\n    },\n  },\n  store:{\n    visible: false,\n    current: {},\n    home: false,\n    product: false,\n    music: false,\n    ebook: false,\n    toy: false,\n    tv: false,\n    jewel: false,\n    candy: false,\n    items: [],\n  },\n  vault:{\n    visible: false,\n    home: true,\n    product: false,\n    current: {},\n    items: [],\n  },\n  postregister: false,\n  floatingnotes:[],\n  space:{\n    home: true,\n    wall: false,\n    chat: false,\n    friends: false,\n    envents: false,\n  },\n  wall:{\n    top:[],\n    posts:[],\n  }\n};\n\nconst nav = (state= initialState.nav, action) => {\n  switch(action.type){\n    case ON_DOWN:\n      return Object.assign({}, state, { down: action.option });\n    case ON_NOTIFICATIONS:\n      return Object.assign({}, state, { notifications: action.notifications });\n    case ON_LOADER:\n      return Object.assign({}, state, { loader: action.loader });\n    case ON_LOGIN:\n      return Object.assign({}, state, { login: action.option });\n    case ON_WALLET:\n      return Object.assign({}, state, {\n        notifications: Object.assign({}, state.notifications, { wallet: state.notifications.wallet + action.coin })\n      });\n    case ON_VIEW_NAV:\n      if(action.note === navView.GIFT){\n        return Object.assign({}, state, {\n          notifications: Object.assign({}, state.notifications, {\n            gifts: Object.assign({}, state.notifications.gifts, { view: true }),\n          })\n        });\n      }\n      if(action.note === navView.NOTES){\n        return Object.assign({}, state, {\n          notifications: Object.assign({}, state.notifications, {\n            notes: Object.assign({}, state.notifications.notes, { view: true }),\n          })\n        });\n      }\n      if(action.note === navView.FRIEND){\n        return Object.assign({}, state, {\n          notifications: Object.assign({}, state.notifications, {\n            friendReq: Object.assign({}, state.notifications.friendReq, { view: true }),\n          })\n        });\n      }\n    case ON_NOTE:\n      const { gifts, notes, friendReq } = state.notifications;\n\n      if(action.payload.note === navView.GIFT){\n        return Object.assign({}, state, {\n          notifications: Object.assign({}, state.notifications, {\n            gifts: Object.assign({}, state.notifications.gifts, {\n              view: false,\n              items: [action.payload.user, ...gifts.items],\n            })\n          })\n        })\n      }\n      if(action.payload.note === navView.NOTES){\n        return Object.assign({}, state, {\n          notifications: Object.assign({}, state.notifications, {\n            notes: Object.assign({}, state.notifications.notes, {\n              view: false,\n              items: [action.payload.user, ...notes.items],\n            })\n          })\n        })\n      }\n      if(action.payload.note === navView.FRIEND){\n        return Object.assign({}, state, {\n          notifications: Object.assign({}, state.notifications, {\n            friendReq: Object.assign({}, state.notifications.friendReq, {\n              view: false,\n              items: [action.payload.user, ...friendReq.items],\n            })\n          })\n        })\n      }\n    default:\n      return state;\n  }\n};\n\nconst user = (state= initialState.user, action) => {\n  switch(action.type){\n    case ON_USER:\n      return Object.assign({}, state, action.user);\n    case ON_UPDATE:\n      return Object.assign({}, state, { ...action.payload });\n    default:\n      return state;\n  }\n};\n\nconst greenpost = (state = initialState.greenpost, action) => {\n  switch (action.type) {\n    case ON_GREENINFO:\n      return Object.assign({}, state, { info: action.option });\n    case ON_GREEN_CREATOR:\n      return Object.assign({}, state, { creator: !state.creator });\n    case ON_GREENPOST:\n      return Object.assign({}, state, { current: action.greenpost });\n    case ON_GREEN_LIKE:\n      return Object.assign({}, state, {\n        current: Object.assign({}, state.current, { likes: [action.like, ...state.current.likes] })\n      });\n    case OFF_GREEN_LIKE:\n      const nextState = state.current.likes.filter(like => like._id !== action.uid);\n      return Object.assign({}, state, {\n        current: Object.assign({}, state.current, { likes: nextState })\n      });\n    case ON_GREEN_WISH_FOUND:\n      return Object.assign({}, state, {\n        current: Object.assign({}, state.current, {\n          wish: Object.assign({}, state.current.wish, {\n            found: state.current.wish.found + action.found\n          })\n        })\n      });\n    case ON_GREEN_COMMENT:\n      return Object.assign({}, state, {\n        current: Object.assign({}, state.current, { comments: [...state.current.comments, action.comment] })\n      })\n    default:\n      return state;\n  }\n};\n\nconst greenstore = (state = initialState.store, action) => {\n  const { HOME, PRODUCT, MUSIC, TV, EBOOK, CANDY, TOY, JEWEL } = storeSections;\n  switch(action.type){\n    case ON_STORE:\n      return Object.assign({}, state, { visible: !state.visible, home: true });\n    case ON_PRODUCTS:\n      return Object.assign({}, state, { items: action.products });\n    case PRODUCT:\n      return Object.assign({}, state, {\n        current: action.product,\n        product: true,\n        home: false,\n        jewel: false,\n        ebook: false,\n        music: false,\n        toy: false,\n        tv: false,\n        candy: false,\n      });\n    case HOME:\n      return Object.assign({}, state, {\n        product: false,\n        home: true,\n        jewel: false,\n        ebook: false,\n        music: false,\n        toy: false,\n        tv: false,\n        candy: false,\n      });\n    case MUSIC:\n      return Object.assign({}, state, {\n        product: false,\n        home: false,\n        jewel: false,\n        ebook: false,\n        music: true,\n        toy: false,\n        tv: false,\n        candy: false,\n      });\n    case TV:\n      return Object.assign({}, state, {\n        product: false,\n        home: false,\n        jewel: false,\n        ebook: false,\n        music: false,\n        toy: false,\n        tv: true,\n        candy: false,\n      });\n    case JEWEL:\n      return Object.assign({}, state, {\n        product: false,\n        home: false,\n        jewel: true,\n        ebook: false,\n        music: false,\n        toy: false,\n        tv: false,\n        candy: false,\n      });\n    case TOY:\n      return Object.assign({}, state, {\n        product: false,\n        home: false,\n        jewel: false,\n        ebook: false,\n        music: false,\n        toy: true,\n        tv: false,\n        candy: false,\n      });\n    case CANDY:\n      return Object.assign({}, state, {\n        product: false,\n        home: false,\n        jewel: false,\n        ebook: false,\n        music: false,\n        toy: false,\n        tv: false,\n        candy: true,\n      });\n    case EBOOK:\n      return Object.assign({}, state, {\n        product: false,\n        home: false,\n        jewel: false,\n        ebook: true,\n        music: false,\n        toy: false,\n        tv: false,\n        candy: false,\n      });\n    default:\n      return state\n  }\n};\n\nconst postregister = (state = initialState.postregister, action) => {\n  if(action.type === ON_POST_REGISTER){\n    return !state;\n  }\n  return state;\n};\n\nconst floatingnotes = (state = initialState.floatingnotes, action) => {\n  if(action.type === ON_FLOAT){\n    return [...state, action.payload];\n  }\n  if(action.type === OFF_FLOAT){\n    const nextState = state.filter(note => note.id !== action.id);\n    return nextState;\n  }\n  return state;\n};\n\nconst vault = (state = initialState.vault, action) => {\n  switch (action.type) {\n    case ON_VAULT:\n      return Object.assign({}, state, { visible: !state.visible });\n    case ON_VAULT_HOME:\n      return Object.assign({}, state, { home: true, product: false });\n    case ON_VAULT_PRODUCT:\n      return Object.assign({}, state, { home: false, product: true, current: action.product })\n    default:\n      return state;\n  }\n};\n\nconst space = (state = initialState.space, action) => {\n  switch (action.type) {\n    case ON_SPACE_HOME:\n      return Object.assign({}, state, { home: true, wall: false, chat: false, friends: false, events: false });\n    case ON_SPACE_WALL:\n      return Object.assign({}, state, { home: false, wall: true, chat: false, friends: false, events: false });\n    case ON_SPACE_CHAT:\n      return Object.assign({}, state, { home: false, wall: false, chat: true, friends: false, events: false });\n    case ON_SPACE_FRIENDS:\n      return Object.assign({}, state, { home: false, wall: false, chat: false, friends: true, events: false });\n    case ON_SPACE_EVENTS:\n      return Object.assign({}, state, { home: false, wall: false, chat: false, friends: false, events: true });\n    default:\n      return state;\n  }\n};\nconst wall = (state = initialState.wall, action) => {\n  switch (action.type) {\n    case ON_WALL_TOP:\n      return Object.assign({}, state, { top: action.posts });\n    case ON_WALL_POSTS:\n      return Object.assign({}, state, { posts: action.posts });\n    default:\n      return state;\n  }\n}\n\nexport const store = combineReducers({\n  nav,\n  user,\n  greenpost,\n  greenstore,\n  postregister,\n  floatingnotes,\n  vault,\n  space,\n  wall,\n});\n"]},"metadata":{},"sourceType":"module"}