{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useReducer, useState, useEffect } from 'react';\nimport './greenpost.scss';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { ON_GREENINFO, ON_GREEN_CREATOR, ON_GREEN_LIKE, OFF_GREEN_LIKE } from '../../store/actions';\nimport classnames from 'classnames';\nimport { faUserCheck, faUserClock, faExpandArrowsAlt, faArrowCircleLeft, faUserPlus, faHeart, faGift, faComment, faHome, faShare, faMapMarkerAlt, faDollarSign, faSchool, faMailBulk, faPhone } from '@fortawesome/free-solid-svg-icons';\nimport GreenHome from './home';\nimport Wish from './wish';\nimport Comment from './comment';\nimport Creator from './creator';\nimport axios from 'axios';\nimport { Modal } from 'reactstrap';\n\nvar GreenNav = function GreenNav(_ref) {\n  var setVisible = _ref.setVisible;\n  var uid = useSelector(function (state) {\n    return state.nav.notifications.id;\n  });\n  var pid = useSelector(function (state) {\n    return state.greenpost.current._id;\n  });\n  var likes = useSelector(function (state) {\n    return state.greenpost.current.likes;\n  });\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      like = _useState[0],\n      setLike = _useState[1];\n\n  useEffect(function () {\n    var checkLike = likes.find(function (like) {\n      return like._id === uid;\n    });\n    if (checkLike) setLike(true);\n  }, [likes, uid]);\n\n  var onReact =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get(\"/green/like/\".concat(pid));\n\n            case 3:\n              res = _context.sent;\n\n              if (!like) {\n                dispatch({\n                  type: ON_GREEN_LIKE,\n                  like: res.data\n                });\n                setLike(true);\n              } else {\n                dispatch({\n                  type: OFF_GREEN_LIKE,\n                  uid: uid\n                });\n                setLike(false);\n              }\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function onReact() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"nav\", {\n    className: \"greennav_main_cont\"\n  }, __jsx(\"ul\", null, __jsx(\"li\", null, __jsx(\"button\", {\n    onClick: function onClick() {\n      return setVisible({\n        home: true,\n        wish: false,\n        comments: false\n      });\n    },\n    title: \"Inicio\"\n  }, __jsx(FontAwesomeIcon, {\n    icon: faHome\n  }))), __jsx(\"li\", null, __jsx(\"button\", {\n    onClick: onReact,\n    style: like ? {\n      background: \"#8bb940\",\n      color: \"#ffffff\"\n    } : {\n      background: \"transparent\",\n      color: \"#ffffff\"\n    },\n    title: \"Reaccionar\"\n  }, __jsx(FontAwesomeIcon, {\n    icon: faHeart\n  }))), __jsx(\"li\", null, __jsx(\"button\", {\n    onClick: function onClick() {\n      return setVisible({\n        home: false,\n        wish: true,\n        comments: false\n      });\n    },\n    title: \"Ver Deseo\"\n  }, __jsx(FontAwesomeIcon, {\n    icon: faGift\n  }))), __jsx(\"li\", null, __jsx(\"button\", {\n    onClick: function onClick() {\n      return setVisible({\n        home: false,\n        wish: false,\n        comments: true\n      });\n    },\n    title: \"Comentar\"\n  }, __jsx(FontAwesomeIcon, {\n    icon: faComment\n  }))), __jsx(\"li\", null, __jsx(\"button\", {\n    title: \"Compartir en mi perfil\"\n  }, __jsx(FontAwesomeIcon, {\n    icon: faShare\n  }))), __jsx(\"li\", null, __jsx(\"button\", {\n    title: \"Abrir en pantala completa\"\n  }, __jsx(FontAwesomeIcon, {\n    icon: faExpandArrowsAlt\n  })))));\n};\n\nvar BtnFriend = function BtnFriend() {\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n  var id = useSelector(function (state) {\n    return state.nav.notifications.id;\n  });\n\n  var _useState2 = useState(0),\n      status = _useState2[0],\n      setStatus = _useState2[1];\n\n  var sendFriend =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios.get(\"/friend/send/\".concat(user._id));\n\n            case 3:\n              setStatus(1);\n              _context2.next = 9;\n              break;\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 6]]);\n    }));\n\n    return function sendFriend() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var acceptFriend =\n  /*#__PURE__*/\n  function () {\n    var _ref4 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return axios.get(\"/friend/accept/\".concat(user._id));\n\n            case 3:\n              setStatus(0);\n              _context3.next = 9;\n              break;\n\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 6]]);\n    }));\n\n    return function acceptFriend() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var cancelFriend =\n  /*#__PURE__*/\n  function () {\n    var _ref5 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return axios.get(\"/friend/cancel/\".concat(user._id));\n\n            case 3:\n              setStatus(null);\n              _context4.next = 9;\n              break;\n\n            case 6:\n              _context4.prev = 6;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.log(_context4.t0);\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 6]]);\n    }));\n\n    return function cancelFriend() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var friend = user.friends.find(function (friend) {\n      return friend._id === id;\n    });\n    var status = friend ? friend.status : null;\n    setStatus(status);\n  }, [id]);\n\n  switch (status) {\n    case 0:\n      return __jsx(\"button\", {\n        onClick: cancelFriend,\n        type: \"button\",\n        title: \"Eliminar amigo\"\n      }, \"Eliminar Amigo\");\n\n    case 1:\n      return __jsx(\"button\", {\n        onClick: cancelFriend,\n        type: \"button\",\n        title: \"Cancelar solicitud de amistad\"\n      }, \"Esparando Confirmacion\");\n\n    case 2:\n      return __jsx(\"button\", {\n        onClick: acceptFriend,\n        type: \"button\",\n        title: \"Aceptar solicitud de amistad\"\n      }, \"Aceptar\");\n\n    default:\n      return __jsx(\"button\", {\n        onClick: sendFriend,\n        type: \"button\",\n        title: \"Enviar solicitud de amistad\"\n      }, \"Agregar Amigo\");\n  }\n};\n\nvar GreenInfo = function GreenInfo() {\n  var info = useSelector(function (state) {\n    return state.greenpost.info;\n  });\n  var dispatch = useDispatch();\n\n  var _useReducer = useReducer(function (state, next) {\n    return _objectSpread({}, state, next);\n  }, {\n    home: true,\n    wish: false,\n    comments: false\n  }),\n      visible = _useReducer[0],\n      setVisible = _useReducer[1];\n\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n  return __jsx(\"div\", {\n    className: classnames({\n      greeninfo_main_cont: true,\n      greeninfo_main_cont_visible: info\n    })\n  }, __jsx(\"div\", {\n    className: \"section_main_cont\"\n  }, visible.home && __jsx(GreenHome, null), visible.wish && __jsx(Wish, null), visible.comments && __jsx(Comment, null)), __jsx(\"footer\", null, user.owner && __jsx(\"button\", {\n    onClick: function onClick() {\n      return dispatch({\n        type: ON_GREEN_CREATOR\n      });\n    },\n    title: \"Crear Post\"\n  }, \"GreenPost\"), !user.owner && __jsx(BtnFriend, null), __jsx(GreenNav, {\n    setVisible: setVisible\n  })));\n};\n\nvar BtnInfo = function BtnInfo() {\n  var info = useSelector(function (state) {\n    return state.greenpost.info;\n  });\n  var green = useSelector(function (state) {\n    return state.greenpost;\n  });\n  var dispatch = useDispatch();\n  return __jsx(\"button\", {\n    title: info ? \"Ocultar\" : \"Ver\",\n    onClick: function onClick() {\n      return dispatch({\n        type: ON_GREENINFO,\n        option: !info\n      });\n    },\n    className: classnames({\n      btngreen_info: true,\n      btngreen_info_rotate: info\n    })\n  }, __jsx(FontAwesomeIcon, {\n    icon: faArrowCircleLeft\n  }));\n};\n\nvar GreenPost = function GreenPost() {\n  var green = useSelector(function (state) {\n    return state.greenpost.current;\n  });\n  var greenCreator = useSelector(function (state) {\n    return state.greenpost.creator;\n  });\n  var img = green.img;\n  return __jsx(\"div\", {\n    style: {\n      backgroundImage: \"url(\".concat(img, \")\")\n    },\n    className: \"greenpost_main_cont\"\n  }, __jsx(Modal, {\n    style: {\n      minWidth: '80%'\n    },\n    isOpen: greenCreator\n  }, __jsx(Creator, {\n    green: true\n  })), __jsx(GreenInfo, null), __jsx(BtnInfo, null));\n};\n\nexport default GreenPost;","map":null,"metadata":{},"sourceType":"module"}