{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/felix/Documentos/projects/greenlink/components/greenpost/creator.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useReducer } from 'react';\nimport './creator.scss';\nimport { Modal } from 'reactstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ON_GREEN_CREATOR } from '../../store/actions';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCamera } from '@fortawesome/free-solid-svg-icons';\n\nconst GreenPost = ({\n  img,\n  setImg,\n  onImg\n}) => {\n  return __jsx(\"div\", {\n    style: {\n      backgroundImage: `url(${img})`\n    },\n    className: \"creator_greenpost_main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"green\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    id: \"green\",\n    name: \"green\",\n    onChange: onImg,\n    type: \"file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), __jsx(FontAwesomeIcon, {\n    icon: faCamera,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  })));\n};\n\nconst Creator = () => {\n  const visible = useSelector(state => state.greenpost.creator);\n  const dispatch = useDispatch();\n  const {\n    0: section,\n    1: setSection\n  } = useReducer((state, next) => _objectSpread({}, state, next), {\n    green: true,\n    wish: false\n  });\n  const {\n    0: store,\n    1: setStore\n  } = useState(false);\n  const {\n    0: img,\n    1: setImg\n  } = useState('/static/random/r16.jpg');\n  const {\n    0: history,\n    1: setHistory\n  } = useState('');\n\n  const onImg = e => {\n    const img = e.target.files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = () => {\n      if (reader.result) {\n        setImg(reader.result);\n      } else {\n        setImg('/static/random/r16.jpg');\n      }\n    };\n\n    reader.readAsDataURL(img);\n  };\n\n  return __jsx(Modal, {\n    isOpen: visible,\n    style: {\n      maxWidth: '90vw'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"creator_main_cont\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"GreenPost\"), __jsx(\"button\", {\n    onClick: () => dispatch({\n      type: ON_GREEN_CREATOR\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"X\")), __jsx(\"div\", {\n    className: \"body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, section.green && __jsx(GreenPost, {\n    onImg: onImg,\n    img: img,\n    setImg: setImg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), __jsx(\"footer\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(\"textarea\", {\n    value: history,\n    onChange: e => setHistory(e.currentTarget.value),\n    placeholder: \"Agrega una breve historia...\",\n    name: \"\",\n    id: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Elegir deseo\"))));\n};\n\nexport default Creator;","map":{"version":3,"sources":["/home/felix/Documentos/projects/greenlink/components/greenpost/creator.jsx"],"names":["React","useState","useReducer","Modal","useSelector","useDispatch","ON_GREEN_CREATOR","FontAwesomeIcon","faCamera","GreenPost","img","setImg","onImg","backgroundImage","Creator","visible","state","greenpost","creator","dispatch","section","setSection","next","green","wish","store","setStore","history","setHistory","e","target","files","reader","FileReader","onloadend","result","readAsDataURL","maxWidth","type","currentTarget","value"],"mappings":"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","sourcesContent":["import React, { useState, useReducer } from 'react';\nimport './creator.scss';\nimport { Modal } from 'reactstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ON_GREEN_CREATOR } from '../../store/actions';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCamera } from '@fortawesome/free-solid-svg-icons';\n\nconst GreenPost = ({ img, setImg, onImg }) => {\n  return(\n    <div style={{ backgroundImage: `url(${img})`}} className=\"creator_greenpost_main\">\n      <label htmlFor=\"green\">\n        <input id=\"green\" name=\"green\" onChange={onImg} type=\"file\"/>\n        <FontAwesomeIcon icon={faCamera} />\n      </label>\n    </div>\n  )\n}\n\nconst Creator = () => {\n  const visible = useSelector(state => state.greenpost.creator);\n  const dispatch = useDispatch();\n  const [section, setSection] = useReducer((state, next) => ({ ...state, ...next }),{\n    green: true,\n    wish: false,\n  })\n  const [store, setStore] = useState(false);\n  const [img, setImg]   = useState('/static/random/r16.jpg');\n  const [history, setHistory] = useState('');\n  const onImg = (e) => {\n    const img = e.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend = ()=> {\n      if(reader.result){\n        setImg(reader.result);\n      } else {\n        setImg('/static/random/r16.jpg');\n      }\n    };\n    reader.readAsDataURL(img);\n  }\n\n  return(\n    <Modal isOpen={visible} style={{ maxWidth: '90vw' }}>\n      <div className=\"creator_main_cont\">\n        <header>\n          <p>GreenPost</p>\n          <button onClick={()=> dispatch({ type: ON_GREEN_CREATOR })}>X</button>\n        </header>\n        <div className=\"body\">\n          { section.green && <GreenPost onImg={onImg} img={img} setImg={setImg} /> }\n        </div>\n        <footer>\n          <textarea value={history} onChange={(e)=> setHistory(e.currentTarget.value)} placeholder=\"Agrega una breve historia...\" name=\"\" id=\"\" />\n          <button>Elegir deseo</button>\n        </footer>\n      </div>\n    </Modal>\n  )\n}\n\nexport default Creator;\n"]},"metadata":{},"sourceType":"module"}